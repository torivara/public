----------------------------------------------------------------------------------------------------
------------------------------------ MegaLinter, by OX Security ------------------------------------
----------------------------------------------------------------------------------------------------
 - Image Creation Date: 2023-08-09T22:49:16Z
 - Image Revision: fda6ac3a38be0e969820709ac16e442464e5a035
 - Image Version: v7.3.0
----------------------------------------------------------------------------------------------------
The MegaLinter documentation can be found at:
 - https://megalinter.io/7.3.0
----------------------------------------------------------------------------------------------------
::group::MegaLinter initialization (expand for details)
MegaLinter will analyze workspace [/github/workspace]
GITHUB_REPOSITORY: torivara/public
GITHUB_REF: refs/pull/4/merge
GITHUB_RUN_ID: 5976417725


[Pre] run: [echo "This is MegaLinter PRE_COMMAND on own MegaLinter ! :)"] in cwd [/github/workspace]
[Pre] result:
This is MegaLinter PRE_COMMAND on own MegaLinter ! :)

[Activation] JSON_NPM_PACKAGE_JSON_LINT has been set inactive, as none of these files has been found: ['package.json']
[Activation] JSX_ESLINT has been set inactive, as none of these files has been found: ['.eslintrc.json', '.eslintrc.yml', '.eslintrc.yaml', '.eslintrc.js', '.eslintrc.cjs', 'package.json:eslintConfig']
[Activation] KUBERNETES_HELM has been set inactive, as none of these files has been found: ['Chart.yml', 'Chart.yaml']
[Activation] KUBERNETES_KUBESCAPE has been set inactive, as none of these files has been found: ['Chart.yml', 'Chart.yaml']
[SemgrepLinter] Deactivated because no ruleset has been defined
[Activation] SPELL_PROSELINT has been set inactive, as none of these files has been found: ['.proselintrc', 'proselint/config.json']
[Activation] SPELL_VALE has been set inactive, as none of these files has been found: ['.vale.ini']
[Activation] SQL_SQLFLUFF has been set inactive, as none of these files has been found: ['.sqlfluff']
[Activation] SWIFT_SWIFTLINT has been set inactive, as none of these files has been found: ['.swiftlint.yml']
[Activation] TSX_ESLINT has been set inactive, as none of these files has been found: ['.eslintrc.json', '.eslintrc.yml', '.eslintrc.yaml', '.eslintrc.js', '.eslintrc.cjs', 'package.json:eslintConfig']
[Activation] TYPESCRIPT_ES has been set inactive, as none of these files has been found: ['.eslintrc.json', '.eslintrc.yml', '.eslintrc.yaml', '.eslintrc.js', '.eslintrc.cjs', 'package.json:eslintConfig']
MARKDOWN_REMARK_LINT has been temporary disabled in MegaLinter, please use a previous MegaLinter version or wait for the next one !
Skipped linters: ANSIBLE_ANSIBLE_LINT, CLOUDFORMATION_CFN_LINT, CSS_SCSS_LINT, CSS_STYLELINT, EDITORCONFIG_EDITORCONFIG_CHECKER, JAVASCRIPT_ES, JAVASCRIPT_PRETTIER, JAVASCRIPT_STANDARD, JSON_NPM_PACKAGE_JSON_LINT, JSX_ESLINT, KUBERNETES_HELM, KUBERNETES_KUBECONFORM, KUBERNETES_KUBESCAPE, MARKDOWN_REMARK_LINT, REPOSITORY_GITLEAKS, REPOSITORY_KICS, REPOSITORY_SEMGREP, REPOSITORY_TRUFFLEHOG, SALESFORCE_SFDX_SCANNER_APEX, SALESFORCE_SFDX_SCANNER_AURA, SALESFORCE_SFDX_SCANNER_LWC, SPELL_PROSELINT, SPELL_VALE, SQL_SQLFLUFF, SWIFT_SWIFTLINT, TEKTON_TEKTON_LINT, TSX_ESLINT, TYPESCRIPT_ES, TYPESCRIPT_PRETTIER
To receive reports as email, please set variable EMAIL_REPORTER_EMAIL
::endgroup::
::group::MegaLinter now collects the files to analyse (expand for details)
Listing updated files in [/github/workspace] using git diff.
Modified files:
.mega-linter.yml
deploy.json
terraform/insecure/appservice/main.tf
terraform/optional-testing/modules/storage/main.tf
- File extensions: , .R, .RMD, .Rmd, .bash, .bicep, .c, .c++, .cc, .cdxml, .clj, .cljc, .cljs, .coffee, .cpp, .cs, .cu, .cuh, .cxx, .dart, .dash, .edn, .env, .feature, .go, .gradle, .graphql, .groovy, .gvy, .h, .h++, .hcl, .hh, .hpp, .htm, .html, .hxx, .java, .json, .json5, .jsonc, .ksh, .kt, .kts, .lua, .markdown, .md, .mdx, .nf, .p6, .php, .pl, .pl6, .pm, .pm6, .pp, .proto, .ps1, .ps1xml, .psd1, .psm1, .psrc, .pssc, .py, .r, .raku, .rakumod, .rakutest, .rb, .rs, .rst, .scala, .sh, .smk, .sql, .t, .tex, .tf, .ts, .txt, .vb, .xml, .yaml, .yml
- File names (regex): Dockerfile, Jenkinsfile, Makefile, Snakefile
- Excluding .gitignored files [0]: 
Kept [4] files on [4] found files

+----MATCHING LINTERS--------------+------------------------------------------------------------------------+----------------+------------+
| Descriptor | Linter              | Criteria                                                               | Matching files | Format/Fix |
+------------+---------------------+------------------------------------------------------------------------+----------------+------------+
| ARM        | arm-ttk             | .json                                                                  | 1              | no         |
| COPYPASTE  | jscpd               |                                                                        | project        | no         |
| JSON       | jsonlint            | .json                                                                  | 1              | no         |
| JSON       | eslint-plugin-jsonc | .json|.json5|.jsonc                                                    | 1              | yes        |
| JSON       | v8r                 | .json                                                                  | 1              | no         |
| JSON       | prettier            | .json                                                                  | 1              | yes        |
| REPOSITORY | checkov             |                                                                        | project        | no         |
| REPOSITORY | devskim             |                                                                        | project        | no         |
| REPOSITORY | dustilock           |                                                                        | project        | no         |
| REPOSITORY | git_diff            |                                                                        | project        | no         |
| REPOSITORY | grype               |                                                                        | project        | no         |
| REPOSITORY | secretlint          |                                                                        | project        | no         |
| REPOSITORY | syft                |                                                                        | project        | no         |
| REPOSITORY | trivy               |                                                                        | project        | no         |
| REPOSITORY | trivy-sbom          |                                                                        | project        | no         |
| SPELL      | cspell              |                                                                        | 4              | no         |
| SPELL      | lychee              | .md|.mdx|.markdown|.html|.htm|.rst|.txt|.json|.jsonc|.json5|.yaml|.yml | 2              | no         |
| TERRAFORM  | tflint              | .tf                                                                    | project        | no         |
| TERRAFORM  | terrascan           | .tf                                                                    | project        | no         |
| TERRAFORM  | terraform-fmt       | .tf                                                                    | 2              | yes        |
| YAML       | prettier            | .yml|.yaml                                                             | 1              | yes        |
| YAML       | yamllint            | .yml|.yaml                                                             | 1              | no         |
| YAML       | v8r                 | .yml|.yaml                                                             | 1              | no         |
+------------+---------------------+------------------------------------------------------------------------+----------------+------------+
::endgroup::
Processing linters on [2] parallel cores…
[GitHub Status Reporter] Error posting Status for TERRAFORMwith terraform-fmt: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [TERRAFORM] files with [terraform-fmt] successfully - (0.1s)[0m (expand for details)
- Using [terraform-fmt v1.5.4] https://megalinter.io/7.3.0/descriptors/terraform_terraform_fmt
- MegaLinter key: [TERRAFORM_TERRAFORM_FMT]
- Rules config: identified by [terraform-fmt]
- Number of files analyzed: [2]
::endgroup::
[GitHub Status Reporter] Error posting Status for YAMLwith prettier: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [YAML] files with [prettier] successfully - (0.45s)[0m (expand for details)
- Using [prettier v3.0.1] https://megalinter.io/7.3.0/descriptors/yaml_prettier
- MegaLinter key: [YAML_PRETTIER]
- Rules config: identified by [prettier]
- Number of files analyzed: [1]
::endgroup::
[GitHub Status Reporter] Error posting Status for COPYPASTEwith jscpd: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[33m✅ Linted [COPYPASTE] files with [jscpd]: Found 3 non blocking error(s) - (1.34s)[0m (expand for details)
- Using [jscpd v3.5.9] https://megalinter.io/7.3.0/descriptors/copypaste_jscpd
- MegaLinter key: [COPYPASTE_JSCPD]
- Rules config: [.jscpd.json]
--Error detail:
Clone found (powershell):
 - UpdateManagement-TurnOffVMs.ps1 [26:1 - 45:7] (19 lines, 97 tokens)
   UpdateManagement-TurnOnVMs.ps1 [27:1 - 48:7]

Clone found (powershell):
 - UpdateManagement-TurnOffVMs.ps1 [55:1 - 74:7] (19 lines, 123 tokens)
   UpdateManagement-TurnOnVMs.ps1 [63:1 - 82:40]

Clone found (powershell):
 - UpdateManagement-TurnOffVMs.ps1 [79:1 - 93:7] (14 lines, 123 tokens)
   UpdateManagement-TurnOnVMs.ps1 [90:1 - 104:85]

┌────────────┬────────────────┬─────────────┬──────────────┬──────────────┬──────────────────┬───────────────────┐
│ Format     │ Files analyzed │ Total lines │ Total tokens │ Clones found │ Duplicated lines │ Duplicated tokens │
├────────────┼────────────────┼─────────────┼──────────────┼──────────────┼──────────────────┼───────────────────┤
│ powershell │ 13             │ 820         │ 5297         │ 3            │ 52 (6.34%)       │ 343 (6.48%)       │
├────────────┼────────────────┼─────────────┼──────────────┼──────────────┼──────────────────┼───────────────────┤
│ Total:     │ 13             │ 820         │ 5297         │ 3            │ 52 (6.34%)       │ 343 (6.48%)       │
└────────────┴────────────────┴─────────────┴──────────────┴──────────────┴──────────────────┴───────────────────┘
Found 3 clones.
HTML report saved to /github/workspace/megalinter-reports/copy-paste/html/
ERROR: jscpd found too many duplicates (6.34%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (6.34%) over threshold (0%)
    at ThresholdReporter.report (/node-deps/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node-deps/node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node-deps/node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)

::endgroup::
[GitHub Status Reporter] Error posting Status for JSONwith eslint-plugin-jsonc: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [JSON] files with [eslint-plugin-jsonc] successfully - (1.01s)[0m (expand for details)
- Using [eslint-plugin-jsonc v2.9.0] https://megalinter.io/7.3.0/descriptors/json_eslint_plugin_jsonc
- MegaLinter key: [JSON_ESLINT_PLUGIN_JSONC]
- Rules config: [.eslintrc-json.json]
- Number of files analyzed: [1]
::endgroup::
[GitHub Status Reporter] Error posting Status for JSONwith v8r: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [JSON] files with [v8r] successfully - (1.81s)[0m (expand for details)
- Using [v8r v2.0.0] https://megalinter.io/7.3.0/descriptors/json_v8r
- MegaLinter key: [JSON_V8R]
- Rules config: identified by [v8r]
- Number of files analyzed: [1]
::endgroup::
[GitHub Status Reporter] Error posting Status for JSONwith prettier: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [JSON] files with [prettier] successfully - (0.38s)[0m (expand for details)
- Using [prettier v3.0.1] https://megalinter.io/7.3.0/descriptors/json_prettier
- MegaLinter key: [JSON_PRETTIER]
- Rules config: identified by [prettier]
- Number of files analyzed: [1]
::endgroup::
[GitHub Status Reporter] Error posting Status for REPOSITORYwith secretlint: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [REPOSITORY] files with [secretlint] successfully - (1.42s)[0m (expand for details)
- Using [secretlint v7.0.7] https://megalinter.io/7.3.0/descriptors/repository_secretlint
- MegaLinter key: [REPOSITORY_SECRETLINT]
- Rules config: [.secretlintrc.json]
- Ignore file: [.secretlintignore]
::endgroup::
[GitHub Status Reporter] Error posting Status for REPOSITORYwith devskim: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[33m✅ Linted [REPOSITORY] files with [devskim]: Found 2 non blocking error(s) - (2.64s)[0m (expand for details)
- Using [devskim v1.0.18] https://megalinter.io/7.3.0/descriptors/repository_devskim
- MegaLinter key: [REPOSITORY_DEVSKIM]
- Rules config: identified by [devskim]
--Error detail:
git version 2.38.5
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
fatal: detected dubious ownership in repository at '/github/workspace/.git'
To add an exception for this directory, call:

	git config --global --add safe.directory /github/workspace/.git
{"$schema":"https://www.schemastore.org/schemas/json/sarif-2.1.0.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"devskim","fullName":"Microsoft DevSkim Command Line Interface","version":"1.0.18+fba56c26b8","informationUri":"https://github.com/microsoft/DevSkim/","rules":[{"id":"DS104456","name":"UseOfRestrictedFunctions","fullDescription":{"text":"Use of restricted functions.: Use of restricted functions."},"help":{"text":"Use of restricted functions.","markdown":"Visit [https://github.com/Microsoft/DevSkim/blob/main/guidance/DS104456.md](https://github.com/Microsoft/DevSkim/blob/main/guidance/DS104456.md) for guidance on this issue."},"shortDescription":{"text":"Use of restricted functions."},"defaultConfiguration":{"level":"error"},"helpUri":"https://github.com/Microsoft/DevSkim/blob/main/guidance/DS104456.md","properties":{"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}}]}},"versionControlProvenance":[{"repositoryUri":"https://github.com/torivara/public","revisionId":"73fc4e5b382ec15874750348b000fb05c66e4392","branch":"(no branch)"}],"results":[{"ruleId":"DS104456","level":"error","message":{"text":"Use of restricted functions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"torivar.com/resources/powershell.ps1"},"region":{"startLine":16,"startColumn":19,"endLine":16,"endColumn":57,"charOffset":622,"charLength":38,"snippet":{"text":"System.Runtime.InteropServices.Marshal","rendered":{"text":"System.Runtime.InteropServices.Marshal","markdown":"`System.Runtime.InteropServices.Marshal`"}},"sourceLanguage":"powershell"}}}],"properties":{"tags":["Implementation.Scripting.PowerShell.DangeousFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}},{"ruleId":"DS104456","level":"error","message":{"text":"Use of restricted functions."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"torivar.com/resources/powershell.ps1"},"region":{"startLine":15,"startColumn":9,"endLine":15,"endColumn":47,"charOffset":531,"charLength":38,"snippet":{"text":"System.Runtime.InteropServices.Marshal","rendered":{"text":"System.Runtime.InteropServices.Marshal","markdown":"`System.Runtime.InteropServices.Marshal`"}},"sourceLanguage":"powershell"}}}],"properties":{"tags":["Implementation.Scripting.PowerShell.DangeousFunction"],"DevSkimSeverity":"Important","DevSkimConfidence":"Unspecified"}}],"columnKind":"utf16CodeUnits"}]}

::endgroup::
[GitHub Status Reporter] Error posting Status for YAMLwith v8r: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [YAML] files with [v8r] successfully - (2.99s)[0m (expand for details)
- Using [v8r v2.0.0] https://megalinter.io/7.3.0/descriptors/yaml_v8r
- MegaLinter key: [YAML_V8R]
- Rules config: identified by [v8r]
- Number of files analyzed: [1]
::endgroup::
[GitHub Status Reporter] Error posting Status for SPELLwith cspell: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[33m✅ Linted [SPELL] files with [cspell]: Found 30 non blocking error(s) - (6.89s)[0m (expand for details)
- Using [cspell v6.31.3] https://megalinter.io/7.3.0/descriptors/spell_cspell
- MegaLinter key: [SPELL_CSPELL]
- Rules config: identified by [cspell]
- Number of files analyzed: [5]
--Error detail:
1/5 ./.mega-linter.yml 2996.50ms X
/github/workspace/.mega-linter.yml:7:5       - Unknown word (TEKTON)     -- - TEKTON
	 Suggestions: [TESTON, TEUTON, TETON, Teuton, Teton]
/github/workspace/.mega-linter.yml:9:16      - Unknown word (GITLEAKS)   -- - REPOSITORY_GITLEAKS
	 Suggestions: [GITLENS, GISELA'S, Gisela's, GIFTLESS, GITTERNS]
/github/workspace/.mega-linter.yml:10:16     - Unknown word (KICS)       -- - REPOSITORY_KICS
	 Suggestions: [KICK, KICKS, KI'S, KIDS, KINS]
/github/workspace/.mega-linter.yml:11:16     - Unknown word (TRUFFLEHOG) -- - REPOSITORY_TRUFFLEHOG
	 Suggestions: [TRUFFLE'S, TRUFFLED, TRUFFLES, TRUFFLE]
/github/workspace/.mega-linter.yml:14:12     - Unknown word (PYRIGHT)    -- - PYTHON_PYRIGHT
	 Suggestions: [PLIGHT, ALRIGHT, SPRIGHT, UPRIGHT, ARIGHT]
/github/workspace/.mega-linter.yml:15:16     - Unknown word (DEVSKIM)    -- - REPOSITORY_DEVSKIM
	 Suggestions: [NEVSKI, Nevski, DEVILKIN, DEISTIC, DESKILL]
/github/workspace/.mega-linter.yml:16:16     - Unknown word (GRYPE)      -- - REPOSITORY_GRYPE
	 Suggestions: [GRAPE, GRIPE, GROPE, GREP, GYRE]
/github/workspace/.mega-linter.yml:17:16     - Unknown word (SEMGREP)    -- - REPOSITORY_SEMGREP
	 Suggestions: [SEMPRE, SEGRE, Segre, DEMIREP, EGREP]
/github/workspace/.mega-linter.yml:19:16     - Unknown word (TRIVY)      -- - REPOSITORY_TRIVY
	 Suggestions: [PRIVY, TRIVIA, TRIVET, TRIAD, TRIAL]
/github/workspace/.mega-linter.yml:21:15     - Unknown word (TERRASCAN)  -- - TERRAFORM_TERRASCAN
	 Suggestions: [TERRACE, ETRUSCAN, TERRANCE, TERRAMYCIN, Terrance]
/github/workspace/.mega-linter.yml:22:15     - Unknown word (TFLINT)     -- - TERRAFORM_TFLINT
	 Suggestions: [TSLINT, FLINT, Flint, TILING, TXLIST]
/github/workspace/.mega-linter.yml:24:11     - Unknown word (PROSELINT)  -- - SPELL_PROSELINT
	 Suggestions: [MORSELING, HORSEMINT, PROSELYTING, PROSELYTE, PROSERPINA]
2/5 ./9ae7fe80-3355-4343-8e6c-24f3abb3e572-megalinter_file_names_cspell.txt 175.53ms X
/github/workspace/9ae7fe80-3355-4343-8e6c-24f3abb3e572-megalinter_file_names_cspell.txt:3:20      - Unknown word (appservice) -- terraform insecure appservice main
	 Suggestions: [apprentice, disservice, service]
3/5 ./deploy.json 988.69ms X
/github/workspace/deploy.json:7:27      - Unknown word (storageaccount) -- "defaultValue": "rg-storageaccount"
	 Suggestions: []
/github/workspace/deploy.json:11:24     - Unknown word (westeurope)     -- "defaultValue": "westeurope"
	 Suggestions: []
/github/workspace/deploy.json:16:24     - Unknown word (asdstorage)     -- "defaultValue": "asdstorage"
	 Suggestions: [storage, Storage]
4/5 ./terraform/insecure/appservice/main.tf 759.38ms X
/github/workspace/terraform/insecure/appservice/main.tf:1:11      - Unknown word (azurerm)    -- provider "azurerm" {
	 Suggestions: [azures, azure, azure's, azores, Azores]
/github/workspace/terraform/insecure/appservice/main.tf:5:11      - Unknown word (azurerm)    -- resource "azurerm_resource_group" "rg
	 Suggestions: [azures, azure, azure's, azores, Azores]
/github/workspace/terraform/insecure/appservice/main.tf:7:15      - Unknown word (norwayeast) -- location = "norwayeast"
	 Suggestions: [norway's, Norway's, northeast, Northeast]
/github/workspace/terraform/insecure/appservice/main.tf:10:11     - Unknown word (azurerm)    -- resource "azurerm_service_plan" "plan
	 Suggestions: [azures, azure, azure's, azores, Azores]
/github/workspace/terraform/insecure/appservice/main.tf:11:25     - Unknown word (azurerm)    -- location = azurerm_resource_group.rg.location
	 Suggestions: [azures, azure, azure's, azores, Azores]
/github/workspace/terraform/insecure/appservice/main.tf:14:25     - Unknown word (azurerm)    -- resource_group_name = azurerm_resource_group.rg.name
	 Suggestions: [azures, azure, azure's, azores, Azores]
5/5 ./terraform/optional-testing/modules/storage/main.tf 332.61ms X
/github/workspace/terraform/optional-testing/modules/storage/main.tf:5:5       - Unknown word (azurerm)    -- azurerm = {
	 Suggestions: [azures, azure, azure's, azores, Azores]
/github/workspace/terraform/optional-testing/modules/storage/main.tf:6:28      - Unknown word (azurerm)    -- source = "hashicorp/azurerm"
	 Suggestions: [azures, azure, azure's, azores, Azores]
/github/workspace/terraform/optional-testing/modules/storage/main.tf:12:11     - Unknown word (azurerm)    -- provider "azurerm" {
	 Suggestions: [azures, azure, azure's, azores, Azores]
/github/workspace/terraform/optional-testing/modules/storage/main.tf:17:45     - Unknown word (azurerm)    -- group_name = azurerm_resource_group.default
	 Suggestions: [azures, azure, azure's, azores, Azores]
/github/workspace/terraform/optional-testing/modules/storage/main.tf:18:46     - Unknown word (norwayeast) -- = "norwayeast"
	 Suggestions: [norway's, Norway's, northeast, Northeast]
/github/workspace/terraform/optional-testing/modules/storage/main.tf:27:11     - Unknown word (azurerm)    -- resource "azurerm_resource_group" "default
	 Suggestions: [azures, azure, azure's, azores, Azores]
/github/workspace/terraform/optional-testing/modules/storage/main.tf:28:15     - Unknown word (norwayeast) -- location = "norwayeast"
	 Suggestions: [norway's, Norway's, northeast, Northeast]
/github/workspace/terraform/optional-testing/modules/storage/main.tf:48:37     - Unknown word (storeacc)   -- azurerm_storage_account" "storeacc" {
	 Suggestions: [storeyed, store's, storedi, storeys, stored]
CSpell: Files checked: 5, Issues found: 30 in 5 files

::endgroup::
[GitHub Status Reporter] Error posting Status for REPOSITORYwith grype: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [REPOSITORY] files with [grype] successfully - (9.94s)[0m (expand for details)
- Using [grype v0.63.1] https://megalinter.io/7.3.0/descriptors/repository_grype
- MegaLinter key: [REPOSITORY_GRYPE]
- Rules config: [.grype.yaml]
::endgroup::
[GitHub Status Reporter] Error posting Status for REPOSITORYwith trivy: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[33m✅ Linted [REPOSITORY] files with [trivy]: Found 1 non blocking error(s) - (9.58s)[0m (expand for details)
- Using [trivy v0.44.0] https://megalinter.io/7.3.0/descriptors/repository_trivy
- MegaLinter key: [REPOSITORY_TRIVY]
- Rules config: identified by [trivy]
--Error detail:
2023-08-25T13:23:58.214Z	[34mINFO[0m	Need to update DB
2023-08-25T13:23:58.214Z	[34mINFO[0m	DB Repository: ghcr.io/aquasecurity/trivy-db
2023-08-25T13:23:58.214Z	[34mINFO[0m	Downloading DB...
11.44 MiB / 39.56 MiB [----------------->___________________________________________] 28.93% ? p/s ?27.82 MiB / 39.56 MiB [------------------------------------------>__________________] 70.32% ? p/s ?39.56 MiB / 39.56 MiB [----------------------------------------------------------->] 100.00% ? p/s ?39.56 MiB / 39.56 MiB [---------------------------------------------->] 100.00% 47.03 MiB p/s ETA 0s39.56 MiB / 39.56 MiB [---------------------------------------------->] 100.00% 47.03 MiB p/s ETA 0s39.56 MiB / 39.56 MiB [---------------------------------------------->] 100.00% 47.03 MiB p/s ETA 0s39.56 MiB / 39.56 MiB [---------------------------------------------->] 100.00% 44.00 MiB p/s ETA 0s39.56 MiB / 39.56 MiB [---------------------------------------------->] 100.00% 44.00 MiB p/s ETA 0s39.56 MiB / 39.56 MiB [---------------------------------------------->] 100.00% 44.00 MiB p/s ETA 0s39.56 MiB / 39.56 MiB [---------------------------------------------->] 100.00% 41.16 MiB p/s ETA 0s39.56 MiB / 39.56 MiB [-------------------------------------------------] 100.00% 21.01 MiB p/s 2.1s2023-08-25T13:24:00.837Z	[34mINFO[0m	Vulnerability scanning is enabled
2023-08-25T13:24:00.837Z	[34mINFO[0m	Misconfiguration scanning is enabled
2023-08-25T13:24:00.837Z	[34mINFO[0m	Need to update the built-in policies
2023-08-25T13:24:00.837Z	[34mINFO[0m	Downloading the built-in policies...
42.46 KiB / 42.46 KiB [-----------------------------------------------------------] 100.00% ? p/s 0s2023-08-25T13:24:06.976Z	[34mINFO[0m	Number of language-specific files: 0
2023-08-25T13:24:06.976Z	[34mINFO[0m	Detected config files: 46

template.json (azure-arm)
=========================
Tests: 6 (SUCCESSES: 2, FAILURES: 4, EXCEPTIONS: 0)
Failures: 4 (UNKNOWN: 0, LOW: 2, MEDIUM: 1, HIGH: 1, CRITICAL: 0)

LOW: App service does not have client certificates enabled.
════════════════════════════════════════
The TLS mutual authentication technique in enterprise environments ensures the authenticity of clients to the server. If incoming client certificates are enabled only an authenticated client with valid certificates can access the app.

See https://avd.aquasec.com/misconfig/avd-azu-0001
────────────────────────────────────────
 template.json:122-141
────────────────────────────────────────
   1   {
   .   
 122 ┌             "properties": {
 123 │                 "name": "[variables('webAppName')]",
 124 │                 "siteConfig": {
 125 │                     "appSettings": "[union(parameters('customAppSettings'),createArray(json(concat('{\"name\": \"APPINSIGHTS_INSTRUMENTATIONKEY\", \"value\": \"',reference(resourceId('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey,'\"}')),json(concat('{\"name\": \"APPLICATIONINSIGHTS_CONNECTION_STRING\", \"value\": \"',reference(resourceId('microsoft.insights/components/', variables('appInsightsName'))).ConnectionString,'\"}')),json(concat('{\"name\": \"ApplicationInsightsAgent_EXTENSION_VERSION\", \"value\": \"~2\"}')),json(concat('{\"name\": \"XDT_MicrosoftApplicationInsights_Mode\", \"value\": \"recommended\"}')),json(concat('{\"name\": \"InstrumentationEngine_EXTENSION_VERSION\", \"value\": \"~1\"}')),json(concat('{\"name\": \"XDT_MicrosoftApplicationInsights_BaseExtensions\", \"value\": \"~1\"}'))))]",
 126 │                     "metadata": [
 127 │                         {
 128 └                             "name": "CURRENT_STACK",
 ...   
────────────────────────────────────────


LOW: App service does not have an identity type.
════════════════════════════════════════
Registering the identity used by an App with AD allows it to interact with other services without using username and password

See https://avd.aquasec.com/misconfig/avd-azu-0002
────────────────────────────────────────
 template.json:122-141
────────────────────────────────────────
   1   {
   .   
 122 ┌             "properties": {
 123 │                 "name": "[variables('webAppName')]",
 124 │                 "siteConfig": {
 125 │                     "appSettings": "[union(parameters('customAppSettings'),createArray(json(concat('{\"name\": \"APPINSIGHTS_INSTRUMENTATIONKEY\", \"value\": \"',reference(resourceId('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey,'\"}')),json(concat('{\"name\": \"APPLICATIONINSIGHTS_CONNECTION_STRING\", \"value\": \"',reference(resourceId('microsoft.insights/components/', variables('appInsightsName'))).ConnectionString,'\"}')),json(concat('{\"name\": \"ApplicationInsightsAgent_EXTENSION_VERSION\", \"value\": \"~2\"}')),json(concat('{\"name\": \"XDT_MicrosoftApplicationInsights_Mode\", \"value\": \"recommended\"}')),json(concat('{\"name\": \"InstrumentationEngine_EXTENSION_VERSION\", \"value\": \"~1\"}')),json(concat('{\"name\": \"XDT_MicrosoftApplicationInsights_BaseExtensions\", \"value\": \"~1\"}'))))]",
 126 │                     "metadata": [
 127 │                         {
 128 └                             "name": "CURRENT_STACK",
 ...   
────────────────────────────────────────


MEDIUM: App service does not have authentication enabled.
════════════════════════════════════════
Enabling authentication ensures that all communications in the application are authenticated. The auth_settings block needs to be filled out with the appropriate auth backend settings

See https://avd.aquasec.com/misconfig/avd-azu-0003
────────────────────────────────────────
 template.json:122-141
────────────────────────────────────────
   1   {
   .   
 122 ┌             "properties": {
 123 │                 "name": "[variables('webAppName')]",
 124 │                 "siteConfig": {
 125 │                     "appSettings": "[union(parameters('customAppSettings'),createArray(json(concat('{\"name\": \"APPINSIGHTS_INSTRUMENTATIONKEY\", \"value\": \"',reference(resourceId('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey,'\"}')),json(concat('{\"name\": \"APPLICATIONINSIGHTS_CONNECTION_STRING\", \"value\": \"',reference(resourceId('microsoft.insights/components/', variables('appInsightsName'))).ConnectionString,'\"}')),json(concat('{\"name\": \"ApplicationInsightsAgent_EXTENSION_VERSION\", \"value\": \"~2\"}')),json(concat('{\"name\": \"XDT_MicrosoftApplicationInsights_Mode\", \"value\": \"recommended\"}')),json(concat('{\"name\": \"InstrumentationEngine_EXTENSION_VERSION\", \"value\": \"~1\"}')),json(concat('{\"name\": \"XDT_MicrosoftApplicationInsights_BaseExtensions\", \"value\": \"~1\"}'))))]",
 126 │                     "metadata": [
 127 │                         {
 128 └                             "name": "CURRENT_STACK",
 ...   
────────────────────────────────────────


HIGH: App service does not require a secure TLS version.
════════════════════════════════════════
Use a more recent TLS/SSL policy for the App Service

See https://avd.aquasec.com/misconfig/avd-azu-0006
────────────────────────────────────────
 template.json:122-141
────────────────────────────────────────
   1   {
   .   
 122 ┌             "properties": {
 123 │                 "name": "[variables('webAppName')]",
 124 │                 "siteConfig": {
 125 │                     "appSettings": "[union(parameters('customAppSettings'),createArray(json(concat('{\"name\": \"APPINSIGHTS_INSTRUMENTATIONKEY\", \"value\": \"',reference(resourceId('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey,'\"}')),json(concat('{\"name\": \"APPLICATIONINSIGHTS_CONNECTION_STRING\", \"value\": \"',reference(resourceId('microsoft.insights/components/', variables('appInsightsName'))).ConnectionString,'\"}')),json(concat('{\"name\": \"ApplicationInsightsAgent_EXTENSION_VERSION\", \"value\": \"~2\"}')),json(concat('{\"name\": \"XDT_MicrosoftApplicationInsights_Mode\", \"value\": \"recommended\"}')),json(concat('{\"name\": \"InstrumentationEngine_EXTENSION_VERSION\", \"value\": \"~1\"}')),json(concat('{\"name\": \"XDT_MicrosoftApplicationInsights_BaseExtensions\", \"value\": \"~1\"}'))))]",
 126 │                     "metadata": [
 127 │                         {
 128 └                             "name": "CURRENT_STACK",
 ...   
────────────────────────────────────────



terraform/agic/aks.tf (terraform)
=================================
Tests: 3 (SUCCESSES: 1, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 1, CRITICAL: 0)

MEDIUM: Cluster does not have logging enabled via OMS Agent.
════════════════════════════════════════
Ensure AKS logging to Azure Monitoring is configured for containers to monitor the performance of workloads.

See https://avd.aquasec.com/misconfig/avd-azu-0040
────────────────────────────────────────
 terraform/agic/aks.tf:1-46
────────────────────────────────────────
   1 ┌ resource "azurerm_kubernetes_cluster" "k8s" {
   2 │   name                    = var.aks_name
   3 │   location                = azurerm_resource_group.rg.location
   4 │   dns_prefix              = var.aks_dns_prefix
   5 │   private_cluster_enabled = true
   6 │ 
   7 │   resource_group_name = azurerm_resource_group.rg.name
   8 │ 
   9 └   http_application_routing_enabled = false
  ..   
────────────────────────────────────────


HIGH: Kubernetes cluster does not have a network policy set.
════════════════════════════════════════
The Kubernetes object type NetworkPolicy should be defined to have opportunity allow or block traffic to pods, as in a Kubernetes cluster configured with default settings, all pods can discover and communicate with each other without any restrictions.

See https://avd.aquasec.com/misconfig/avd-azu-0043
────────────────────────────────────────
 terraform/agic/aks.tf:23-29
────────────────────────────────────────
   1   resource "azurerm_kubernetes_cluster" "k8s" {
   .   
  23 ┌   network_profile {
  24 │     network_plugin     = "azure"
  25 │     dns_service_ip     = var.aks_dns_service_ip
  26 │     docker_bridge_cidr = var.aks_docker_bridge_cidr
  27 │     service_cidr       = var.aks_service_cidr
  28 │     load_balancer_sku  = "standard"
  29 └   }
  ..   
────────────────────────────────────────



terraform/agic/deployment.yaml (kubernetes)
===========================================
Tests: 168 (SUCCESSES: 145, FAILURES: 23, EXCEPTIONS: 0)
Failures: 23 (UNKNOWN: 0, LOW: 17, MEDIUM: 6, HIGH: 0, CRITICAL: 0)

MEDIUM: Container 'azure-vote-back' of Deployment 'azure-vote-back' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 terraform/agic/deployment.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: azure-vote-back
  19 │         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
  20 │         env:
  21 │         - name: ALLOW_EMPTY_PASSWORD
  22 │           value: "yes"
  23 │         resources:
  24 │           requests:
  25 │             cpu: 100m
  26 └             memory: 128Mi
  ..   
────────────────────────────────────────


MEDIUM: Container 'azure-vote-front' of Deployment 'azure-vote-front' should set 'securityContext.allowPrivilegeEscalation' to false
════════════════════════════════════════
A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.

See https://avd.aquasec.com/misconfig/ksv001
────────────────────────────────────────
 terraform/agic/deployment.yaml:61-74
────────────────────────────────────────
  61 ┌       - name: azure-vote-front
  62 │         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
  63 │         resources:
  64 │           requests:
  65 │             cpu: 100m
  66 │             memory: 128Mi
  67 │           limits:
  68 │             cpu: 250m
  69 └             memory: 256Mi
  ..   
────────────────────────────────────────


LOW: Container 'azure-vote-back' of Deployment 'azure-vote-back' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 terraform/agic/deployment.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: azure-vote-back
  19 │         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
  20 │         env:
  21 │         - name: ALLOW_EMPTY_PASSWORD
  22 │           value: "yes"
  23 │         resources:
  24 │           requests:
  25 │             cpu: 100m
  26 └             memory: 128Mi
  ..   
────────────────────────────────────────


LOW: Container 'azure-vote-front' of Deployment 'azure-vote-front' should add 'ALL' to 'securityContext.capabilities.drop'
════════════════════════════════════════
The container should drop all default capabilities and add only those that are needed for its execution.

See https://avd.aquasec.com/misconfig/ksv003
────────────────────────────────────────
 terraform/agic/deployment.yaml:61-74
────────────────────────────────────────
  61 ┌       - name: azure-vote-front
  62 │         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
  63 │         resources:
  64 │           requests:
  65 │             cpu: 100m
  66 │             memory: 128Mi
  67 │           limits:
  68 │             cpu: 250m
  69 └             memory: 256Mi
  ..   
────────────────────────────────────────


MEDIUM: Container 'azure-vote-back' of Deployment 'azure-vote-back' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
'runAsNonRoot' forces the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 terraform/agic/deployment.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: azure-vote-back
  19 │         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
  20 │         env:
  21 │         - name: ALLOW_EMPTY_PASSWORD
  22 │           value: "yes"
  23 │         resources:
  24 │           requests:
  25 │             cpu: 100m
  26 └             memory: 128Mi
  ..   
────────────────────────────────────────


MEDIUM: Container 'azure-vote-front' of Deployment 'azure-vote-front' should set 'securityContext.runAsNonRoot' to true
════════════════════════════════════════
'runAsNonRoot' forces the running image to run as a non-root user to ensure least privileges.

See https://avd.aquasec.com/misconfig/ksv012
────────────────────────────────────────
 terraform/agic/deployment.yaml:61-74
────────────────────────────────────────
  61 ┌       - name: azure-vote-front
  62 │         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
  63 │         resources:
  64 │           requests:
  65 │             cpu: 100m
  66 │             memory: 128Mi
  67 │           limits:
  68 │             cpu: 250m
  69 └             memory: 256Mi
  ..   
────────────────────────────────────────


LOW: Container 'azure-vote-back' of Deployment 'azure-vote-back' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 terraform/agic/deployment.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: azure-vote-back
  19 │         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
  20 │         env:
  21 │         - name: ALLOW_EMPTY_PASSWORD
  22 │           value: "yes"
  23 │         resources:
  24 │           requests:
  25 │             cpu: 100m
  26 └             memory: 128Mi
  ..   
────────────────────────────────────────


LOW: Container 'azure-vote-front' of Deployment 'azure-vote-front' should set 'securityContext.readOnlyRootFilesystem' to true
════════════════════════════════════════
An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.

See https://avd.aquasec.com/misconfig/ksv014
────────────────────────────────────────
 terraform/agic/deployment.yaml:61-74
────────────────────────────────────────
  61 ┌       - name: azure-vote-front
  62 │         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
  63 │         resources:
  64 │           requests:
  65 │             cpu: 100m
  66 │             memory: 128Mi
  67 │           limits:
  68 │             cpu: 250m
  69 └             memory: 256Mi
  ..   
────────────────────────────────────────


LOW: Container 'azure-vote-back' of Deployment 'azure-vote-back' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 terraform/agic/deployment.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: azure-vote-back
  19 │         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
  20 │         env:
  21 │         - name: ALLOW_EMPTY_PASSWORD
  22 │           value: "yes"
  23 │         resources:
  24 │           requests:
  25 │             cpu: 100m
  26 └             memory: 128Mi
  ..   
────────────────────────────────────────


LOW: Container 'azure-vote-front' of Deployment 'azure-vote-front' should set 'securityContext.runAsUser' > 10000
════════════════════════════════════════
Force the container to run with user ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv020
────────────────────────────────────────
 terraform/agic/deployment.yaml:61-74
────────────────────────────────────────
  61 ┌       - name: azure-vote-front
  62 │         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
  63 │         resources:
  64 │           requests:
  65 │             cpu: 100m
  66 │             memory: 128Mi
  67 │           limits:
  68 │             cpu: 250m
  69 └             memory: 256Mi
  ..   
────────────────────────────────────────


LOW: Container 'azure-vote-back' of Deployment 'azure-vote-back' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 terraform/agic/deployment.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: azure-vote-back
  19 │         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
  20 │         env:
  21 │         - name: ALLOW_EMPTY_PASSWORD
  22 │           value: "yes"
  23 │         resources:
  24 │           requests:
  25 │             cpu: 100m
  26 └             memory: 128Mi
  ..   
────────────────────────────────────────


LOW: Container 'azure-vote-front' of Deployment 'azure-vote-front' should set 'securityContext.runAsGroup' > 10000
════════════════════════════════════════
Force the container to run with group ID > 10000 to avoid conflicts with the host’s user table.

See https://avd.aquasec.com/misconfig/ksv021
────────────────────────────────────────
 terraform/agic/deployment.yaml:61-74
────────────────────────────────────────
  61 ┌       - name: azure-vote-front
  62 │         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
  63 │         resources:
  64 │           requests:
  65 │             cpu: 100m
  66 │             memory: 128Mi
  67 │           limits:
  68 │             cpu: 250m
  69 └             memory: 256Mi
  ..   
────────────────────────────────────────


LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
The RuntimeDefault/Localhost seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 terraform/agic/deployment.yaml:61-74
────────────────────────────────────────
  61 ┌       - name: azure-vote-front
  62 │         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
  63 │         resources:
  64 │           requests:
  65 │             cpu: 100m
  66 │             memory: 128Mi
  67 │           limits:
  68 │             cpu: 250m
  69 └             memory: 256Mi
  ..   
────────────────────────────────────────


LOW: Either Pod or Container should set 'securityContext.seccompProfile.type' to 'RuntimeDefault'
════════════════════════════════════════
The RuntimeDefault/Localhost seccomp profile must be required, or allow specific additional profiles.

See https://avd.aquasec.com/misconfig/ksv030
────────────────────────────────────────
 terraform/agic/deployment.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: azure-vote-back
  19 │         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
  20 │         env:
  21 │         - name: ALLOW_EMPTY_PASSWORD
  22 │           value: "yes"
  23 │         resources:
  24 │           requests:
  25 │             cpu: 100m
  26 └             memory: 128Mi
  ..   
────────────────────────────────────────


MEDIUM: container azure-vote-back of deployment azure-vote-back in default namespace should specify a seccomp profile
════════════════════════════════════════
Seccomp profile must not be explicitly set to 'Unconfined'.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────


MEDIUM: container azure-vote-front of deployment azure-vote-front in default namespace should specify a seccomp profile
════════════════════════════════════════
Seccomp profile must not be explicitly set to 'Unconfined'.

See https://avd.aquasec.com/misconfig/ksv104
────────────────────────────────────────
 terraform/agic/deployment.yaml:43
────────────────────────────────────────
  43 [ ---
────────────────────────────────────────


LOW: container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 terraform/agic/deployment.yaml:18-32
────────────────────────────────────────
  18 ┌       - name: azure-vote-back
  19 │         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
  20 │         env:
  21 │         - name: ALLOW_EMPTY_PASSWORD
  22 │           value: "yes"
  23 │         resources:
  24 │           requests:
  25 │             cpu: 100m
  26 └             memory: 128Mi
  ..   
────────────────────────────────────────


LOW: container should drop all
════════════════════════════════════════
Containers must drop ALL capabilities, and are only permitted to add back the NET_BIND_SERVICE capability.

See https://avd.aquasec.com/misconfig/ksv106
────────────────────────────────────────
 terraform/agic/deployment.yaml:61-74
────────────────────────────────────────
  61 ┌       - name: azure-vote-front
  62 │         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
  63 │         resources:
  64 │           requests:
  65 │             cpu: 100m
  66 │             memory: 128Mi
  67 │           limits:
  68 │             cpu: 250m
  69 └             memory: 256Mi
  ..   
────────────────────────────────────────


LOW: deployment azure-vote-back in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0
════════════════════════════════════════
According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.

See https://avd.aquasec.com/misconfig/ksv116
────────────────────────────────────────


LOW: deployment azure-vote-front in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0
════════════════════════════════════════
According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.

See https://avd.aquasec.com/misconfig/ksv116
────────────────────────────────────────
 terraform/agic/deployment.yaml:43
────────────────────────────────────────
  43 [ ---
────────────────────────────────────────


LOW: ingress azure-vote-front in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0
════════════════════════════════════════
According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.

See https://avd.aquasec.com/misconfig/ksv116
────────────────────────────────────────
 terraform/agic/deployment.yaml:86
────────────────────────────────────────
  86 [ ---
────────────────────────────────────────


LOW: service azure-vote-back in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0
════════════════════════════════════════
According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.

See https://avd.aquasec.com/misconfig/ksv116
────────────────────────────────────────
 terraform/agic/deployment.yaml:33
────────────────────────────────────────
  33 [ ---
────────────────────────────────────────


LOW: service azure-vote-front in default namespace should set spec.securityContext.runAsGroup, spec.securityContext.supplementalGroups[*] and spec.securityContext.fsGroup to integer greater than 0
════════════════════════════════════════
According to pod security standard 'Non-root groups', containers should be forbidden from running with a root primary or supplementary GID.

See https://avd.aquasec.com/misconfig/ksv116
────────────────────────────────────────
 terraform/agic/deployment.yaml:75
────────────────────────────────────────
  75 [ ---
────────────────────────────────────────



terraform/agic/jumpbox.tf (terraform)
=====================================
Tests: 6 (SUCCESSES: 5, FAILURES: 1, EXCEPTIONS: 0)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)

HIGH: Linux virtual machine allows password authentication.
════════════════════════════════════════
Access to virtual machines should be authenticated using SSH keys. Removing the option of password authentication enforces more secure methods while removing the risks inherent with passwords.

See https://avd.aquasec.com/misconfig/avd-azu-0039
────────────────────────────────────────
 terraform/agic/jumpbox.tf:50
────────────────────────────────────────
  42   resource "azurerm_linux_virtual_machine" "jumpbox" {
  ..   
  50 [   disable_password_authentication = false
  ..   
  67   }
────────────────────────────────────────



terraform/functionapp/modules/app/key_vault.tf (terraform)
==========================================================
Tests: 6 (SUCCESSES: 3, FAILURES: 3, EXCEPTIONS: 0)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 3, HIGH: 0, CRITICAL: 0)

MEDIUM: Vault does not have purge protection enabled.
════════════════════════════════════════
Purge protection is an optional Key Vault behavior and is not enabled by default.

Purge protection can only be enabled once soft-delete is enabled. It can be turned on via CLI or PowerShell.

See https://avd.aquasec.com/misconfig/avd-azu-0016
────────────────────────────────────────
 terraform/functionapp/modules/app/key_vault.tf:1-17
────────────────────────────────────────
   1 ┌ resource "azurerm_key_vault" "kv" {
   2 │   location                   = azurerm_resource_group.rg.location
   3 │   name                       = "${local.resource_prefix}-kv"
   4 │   resource_group_name        = azurerm_resource_group.rg.name
   5 │   sku_name                   = "standard"
   6 │   tenant_id                  = data.azurerm_client_config.current.tenant_id
   7 │   enable_rbac_authorization  = true
   8 │   soft_delete_retention_days = 90
   9 └ 
  ..   
────────────────────────────────────────


MEDIUM: Vault does not have purge protection enabled.
════════════════════════════════════════
Purge protection is an optional Key Vault behavior and is not enabled by default.

Purge protection can only be enabled once soft-delete is enabled. It can be turned on via CLI or PowerShell.

See https://avd.aquasec.com/misconfig/avd-azu-0016
────────────────────────────────────────
 terraform/functionapp/modules/app/key_vault.tf:1-17
────────────────────────────────────────
   1 ┌ resource "azurerm_key_vault" "kv" {
   2 │   location                   = azurerm_resource_group.rg.location
   3 │   name                       = "${local.resource_prefix}-kv"
   4 │   resource_group_name        = azurerm_resource_group.rg.name
   5 │   sku_name                   = "standard"
   6 │   tenant_id                  = data.azurerm_client_config.current.tenant_id
   7 │   enable_rbac_authorization  = true
   8 │   soft_delete_retention_days = 90
   9 └ 
  ..   
────────────────────────────────────────


MEDIUM: Vault does not have purge protection enabled.
════════════════════════════════════════
Purge protection is an optional Key Vault behavior and is not enabled by default.

Purge protection can only be enabled once soft-delete is enabled. It can be turned on via CLI or PowerShell.

See https://avd.aquasec.com/misconfig/avd-azu-0016
────────────────────────────────────────
 terraform/functionapp/modules/app/key_vault.tf:1-17
────────────────────────────────────────
   1 ┌ resource "azurerm_key_vault" "kv" {
   2 │   location                   = azurerm_resource_group.rg.location
   3 │   name                       = "${local.resource_prefix}-kv"
   4 │   resource_group_name        = azurerm_resource_group.rg.name
   5 │   sku_name                   = "standard"
   6 │   tenant_id                  = data.azurerm_client_config.current.tenant_id
   7 │   enable_rbac_authorization  = true
   8 │   soft_delete_retention_days = 90
   9 └ 
  ..   
────────────────────────────────────────



terraform/functionapp/modules/app/storage.tf (terraform)
========================================================
Tests: 12 (SUCCESSES: 9, FAILURES: 3, EXCEPTIONS: 0)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 3)

CRITICAL: Network rules allow access by default.
════════════════════════════════════════
The default_action for network rules should come into effect when no other rules are matched.

The default action should be set to Deny.

See https://avd.aquasec.com/misconfig/avd-azu-0012
────────────────────────────────────────
 terraform/functionapp/modules/app/storage.tf:16
────────────────────────────────────────
   5   resource "azurerm_storage_account" "sa" {
   .   
  16 [     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
  ..   
  20   }
────────────────────────────────────────


CRITICAL: Network rules allow access by default.
════════════════════════════════════════
The default_action for network rules should come into effect when no other rules are matched.

The default action should be set to Deny.

See https://avd.aquasec.com/misconfig/avd-azu-0012
────────────────────────────────────────
 terraform/functionapp/modules/app/storage.tf:16
────────────────────────────────────────
   5   resource "azurerm_storage_account" "sa" {
   .   
  16 [     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
  ..   
  20   }
────────────────────────────────────────


CRITICAL: Network rules allow access by default.
════════════════════════════════════════
The default_action for network rules should come into effect when no other rules are matched.

The default action should be set to Deny.

See https://avd.aquasec.com/misconfig/avd-azu-0012
────────────────────────────────────────
 terraform/functionapp/modules/app/storage.tf:16
────────────────────────────────────────
   5   resource "azurerm_storage_account" "sa" {
   .   
  16 [     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
  ..   
  20   }
────────────────────────────────────────



terraform/insecure/appservice/main.tf (terraform)
=================================================
Tests: 5 (SUCCESSES: 1, FAILURES: 4, EXCEPTIONS: 0)
Failures: 4 (UNKNOWN: 0, LOW: 3, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

LOW: App service does not have client certificates enabled.
════════════════════════════════════════
The TLS mutual authentication technique in enterprise environments ensures the authenticity of clients to the server. If incoming client certificates are enabled only an authenticated client with valid certificates can access the app.

See https://avd.aquasec.com/misconfig/avd-azu-0001
────────────────────────────────────────
 terraform/insecure/appservice/main.tf:20-28
────────────────────────────────────────
  20 ┌ resource "azurerm_app_service" "app" {
  21 │   location            = azurerm_resource_group.rg.location
  22 │   name                = "tf-insecure-app01-as"
  23 │   resource_group_name = azurerm_resource_group.rg.name
  24 │   service_plan_id     = azurerm_service_plan.plan.id
  25 │   site_config {
  26 │   }
  27 │ 
  28 └ }
────────────────────────────────────────


LOW: App service does not have an identity type.
════════════════════════════════════════
Registering the identity used by an App with AD allows it to interact with other services without using username and password

See https://avd.aquasec.com/misconfig/avd-azu-0002
────────────────────────────────────────
 terraform/insecure/appservice/main.tf:20-28
────────────────────────────────────────
  20 ┌ resource "azurerm_app_service" "app" {
  21 │   location            = azurerm_resource_group.rg.location
  22 │   name                = "tf-insecure-app01-as"
  23 │   resource_group_name = azurerm_resource_group.rg.name
  24 │   service_plan_id     = azurerm_service_plan.plan.id
  25 │   site_config {
  26 │   }
  27 │ 
  28 └ }
────────────────────────────────────────


MEDIUM: App service does not have authentication enabled.
════════════════════════════════════════
Enabling authentication ensures that all communications in the application are authenticated. The auth_settings block needs to be filled out with the appropriate auth backend settings

See https://avd.aquasec.com/misconfig/avd-azu-0003
────────────────────────────────────────
 terraform/insecure/appservice/main.tf:20-28
────────────────────────────────────────
  20 ┌ resource "azurerm_app_service" "app" {
  21 │   location            = azurerm_resource_group.rg.location
  22 │   name                = "tf-insecure-app01-as"
  23 │   resource_group_name = azurerm_resource_group.rg.name
  24 │   service_plan_id     = azurerm_service_plan.plan.id
  25 │   site_config {
  26 │   }
  27 │ 
  28 └ }
────────────────────────────────────────


LOW: App service does not have HTTP/2 enabled.
════════════════════════════════════════
Use the latest version of HTTP to ensure you are benefiting from security fixes

See https://avd.aquasec.com/misconfig/avd-azu-0005
────────────────────────────────────────
 terraform/insecure/appservice/main.tf:25-26
────────────────────────────────────────
  20   resource "azurerm_app_service" "app" {
  21     location            = azurerm_resource_group.rg.location
  22     name                = "tf-insecure-app01-as"
  23     resource_group_name = azurerm_resource_group.rg.name
  24     service_plan_id     = azurerm_service_plan.plan.id
  25 ┌   site_config {
  26 └   }
  27   
  28   }
────────────────────────────────────────



terraform/insecure/keyvault/main.tf (terraform)
===============================================
Tests: 4 (SUCCESSES: 0, FAILURES: 3, EXCEPTIONS: 1)
Failures: 3 (UNKNOWN: 0, LOW: 2, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

LOW: Secret does not have a content-type specified.
════════════════════════════════════════
Content Type is an optional Key Vault Secret behavior and is not enabled by default.

Clients may specify the content type of a secret to assist in interpreting the secret data when it's retrieved. The maximum length of this field is 255 characters. There are no pre-defined values. The suggested usage is as a hint for interpreting the secret data.

See https://avd.aquasec.com/misconfig/avd-azu-0015
────────────────────────────────────────
 terraform/insecure/keyvault/main.tf:48-52
────────────────────────────────────────
  48 ┌ resource "azurerm_key_vault_secret" "bad_example" {
  49 │   name         = "secret-sauce"
  50 │   value        = "szechuan"
  51 │   key_vault_id = azurerm_key_vault.example.id
  52 └ }
────────────────────────────────────────


MEDIUM: Vault does not have purge protection enabled.
════════════════════════════════════════
Purge protection is an optional Key Vault behavior and is not enabled by default.

Purge protection can only be enabled once soft-delete is enabled. It can be turned on via CLI or PowerShell.

See https://avd.aquasec.com/misconfig/avd-azu-0016
────────────────────────────────────────
 terraform/insecure/keyvault/main.tf:26
────────────────────────────────────────
  19   resource "azurerm_key_vault" "example" {
  ..   
  26 [   purge_protection_enabled    = false
  ..   
  46   }
────────────────────────────────────────


LOW: Secret should have an expiry date specified.
════════════════════════════════════════
Expiration Date is an optional Key Vault Secret behavior and is not set by default.

Set when the resource will be become inactive.

See https://avd.aquasec.com/misconfig/avd-azu-0017
────────────────────────────────────────
 terraform/insecure/keyvault/main.tf:48-52
────────────────────────────────────────
  48 ┌ resource "azurerm_key_vault_secret" "bad_example" {
  49 │   name         = "secret-sauce"
  50 │   value        = "szechuan"
  51 │   key_vault_id = azurerm_key_vault.example.id
  52 └ }
────────────────────────────────────────



terraform/insecure/role/main.tf (terraform)
===========================================
Tests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)

MEDIUM: Role definition uses wildcard action with all scopes.
════════════════════════════════════════
The permissions granted to a role should be kept to the minimum required to be able to do the task. Wildcard permissions must not be used.

See https://avd.aquasec.com/misconfig/avd-azu-0030
────────────────────────────────────────
 terraform/insecure/role/main.tf:19
────────────────────────────────────────
  13   resource "azurerm_role_definition" "example" {
  ..   
  19 [     actions     = ["*"]
  ..   
  26   }
────────────────────────────────────────



terraform/insecure/vm/main.tf (terraform)
=========================================
Tests: 5 (SUCCESSES: 2, FAILURES: 3, EXCEPTIONS: 0)
Failures: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 3)

CRITICAL: Security group rule allows ingress from public internet.
════════════════════════════════════════
Network security rules should not use very broad subnets.

Where possible, segments should be broken into smaller subnets.

See https://avd.aquasec.com/misconfig/avd-azu-0047
────────────────────────────────────────
 terraform/insecure/vm/main.tf:58
────────────────────────────────────────
  45   resource "azurerm_network_security_group" "nsg" {
  ..   
  58 [     source_address_prefix      = "*"
  ..   
  61   }
────────────────────────────────────────


CRITICAL: Security group rule allows ingress to RDP port from multiple public internet addresses.
════════════════════════════════════════
RDP access can be configured on either the network security group or in the network security group rule.

RDP access should not be permitted from the internet (*, 0.0.0.0, /0, internet, any). Consider using the Azure Bastion Service.

See https://avd.aquasec.com/misconfig/avd-azu-0048
────────────────────────────────────────
 terraform/insecure/vm/main.tf:58
────────────────────────────────────────
  45   resource "azurerm_network_security_group" "nsg" {
  ..   
  58 [     source_address_prefix      = "*"
  ..   
  61   }
────────────────────────────────────────


CRITICAL: Security group rule allows ingress to SSH port from multiple public internet addresses.
════════════════════════════════════════
SSH access can be configured on either the network security group or in the network security group rule. 

SSH access should not be permitted from the internet (*, 0.0.0.0, /0, internet, any)

See https://avd.aquasec.com/misconfig/avd-azu-0050
────────────────────────────────────────
 terraform/insecure/vm/main.tf:58
────────────────────────────────────────
  45   resource "azurerm_network_security_group" "nsg" {
  ..   
  58 [     source_address_prefix      = "*"
  ..   
  61   }
────────────────────────────────────────



terraform/logicapp/main.tf (terraform)
======================================
Tests: 2 (SUCCESSES: 1, FAILURES: 1, EXCEPTIONS: 0)
Failures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)

CRITICAL: Storage account uses an insecure TLS version.
════════════════════════════════════════
Azure Storage currently supports three versions of the TLS protocol: 1.0, 1.1, and 1.2. 

Azure Storage uses TLS 1.2 on public HTTPS endpoints, but TLS 1.0 and TLS 1.1 are still supported for backward compatibility.

This check will warn if the minimum TLS is not set to TLS1_2.

See https://avd.aquasec.com/misconfig/avd-azu-0011
────────────────────────────────────────
 terraform/logicapp/main.tf:45-51
────────────────────────────────────────
  45 ┌ resource "azurerm_storage_account" "logicapp_std_storage" {
  46 │   name                     = "${var.context_prefix}${random_string.unique.result}${var.environment_name}sa"
  47 │   resource_group_name      = azurerm_resource_group.rg.name
  48 │   location                 = azurerm_resource_group.rg.location
  49 │   account_tier             = "Standard"
  50 │   account_replication_type = "LRS"
  51 └ }
────────────────────────────────────────



terraform/optional-testing/modules/storage/main.tf (terraform)
==============================================================
Tests: 8 (SUCCESSES: 4, FAILURES: 4, EXCEPTIONS: 0)
Failures: 4 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 2, CRITICAL: 2)

HIGH: Account does not enforce HTTPS.
════════════════════════════════════════
You can configure your storage account to accept requests from secure connections only by setting the Secure transfer required property for the storage account. 

When you require secure transfer, any requests originating from an insecure connection are rejected. 

Microsoft recommends that you always require secure transfer for all of your storage accounts.

See https://avd.aquasec.com/misconfig/avd-azu-0008
────────────────────────────────────────
 terraform/optional-testing/modules/storage/main.tf:56
────────────────────────────────────────
  48   resource "azurerm_storage_account" "storeacc" {
  ..   
  56 [   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
  ..   
  59   }
────────────────────────────────────────


HIGH: Account does not enforce HTTPS.
════════════════════════════════════════
You can configure your storage account to accept requests from secure connections only by setting the Secure transfer required property for the storage account. 

When you require secure transfer, any requests originating from an insecure connection are rejected. 

Microsoft recommends that you always require secure transfer for all of your storage accounts.

See https://avd.aquasec.com/misconfig/avd-azu-0008
────────────────────────────────────────
 terraform/optional-testing/modules/storage/main.tf:56
────────────────────────────────────────
  48   resource "azurerm_storage_account" "storeacc" {
  ..   
  56 [   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
  ..   
  59   }
────────────────────────────────────────


CRITICAL: Storage account uses an insecure TLS version.
════════════════════════════════════════
Azure Storage currently supports three versions of the TLS protocol: 1.0, 1.1, and 1.2. 

Azure Storage uses TLS 1.2 on public HTTPS endpoints, but TLS 1.0 and TLS 1.1 are still supported for backward compatibility.

This check will warn if the minimum TLS is not set to TLS1_2.

See https://avd.aquasec.com/misconfig/avd-azu-0011
────────────────────────────────────────
 terraform/optional-testing/modules/storage/main.tf:58
────────────────────────────────────────
  48   resource "azurerm_storage_account" "storeacc" {
  ..   
  58 [   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
  59   }
────────────────────────────────────────


CRITICAL: Storage account uses an insecure TLS version.
════════════════════════════════════════
Azure Storage currently supports three versions of the TLS protocol: 1.0, 1.1, and 1.2. 

Azure Storage uses TLS 1.2 on public HTTPS endpoints, but TLS 1.0 and TLS 1.1 are still supported for backward compatibility.

This check will warn if the minimum TLS is not set to TLS1_2.

See https://avd.aquasec.com/misconfig/avd-azu-0011
────────────────────────────────────────
 terraform/optional-testing/modules/storage/main.tf:58
────────────────────────────────────────
  48   resource "azurerm_storage_account" "storeacc" {
  ..   
  58 [   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
  59   }
────────────────────────────────────────



torivar.com/resources/vmtemplate/azuredeploy.json (azure-arm)
=============================================================
Tests: 6 (SUCCESSES: 4, FAILURES: 2, EXCEPTIONS: 0)
Failures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 1)

HIGH: Account does not enforce HTTPS.
════════════════════════════════════════
You can configure your storage account to accept requests from secure connections only by setting the Secure transfer required property for the storage account. 

When you require secure transfer, any requests originating from an insecure connection are rejected. 

Microsoft recommends that you always require secure transfer for all of your storage accounts.

See https://avd.aquasec.com/misconfig/avd-azu-0008
────────────────────────────────────────
 torivar.com/resources/vmtemplate/azuredeploy.json:161
────────────────────────────────────────
   1   {
   .   
 161 [             "properties": {}
 ...   
 350   }
────────────────────────────────────────


CRITICAL: Storage account uses an insecure TLS version.
════════════════════════════════════════
Azure Storage currently supports three versions of the TLS protocol: 1.0, 1.1, and 1.2. 

Azure Storage uses TLS 1.2 on public HTTPS endpoints, but TLS 1.0 and TLS 1.1 are still supported for backward compatibility.

This check will warn if the minimum TLS is not set to TLS1_2.

See https://avd.aquasec.com/misconfig/avd-azu-0011
────────────────────────────────────────
 torivar.com/resources/vmtemplate/azuredeploy.json:161
────────────────────────────────────────
   1   {
   .   
 161 [             "properties": {}
 ...   
 350   }
────────────────────────────────────────



::endgroup::
[GitHub Status Reporter] Error posting Status for REPOSITORYwith trivy-sbom: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [REPOSITORY] files with [trivy-sbom] successfully - (1.49s)[0m (expand for details)
- Using [trivy-sbom v0.44.0] https://megalinter.io/7.3.0/descriptors/repository_trivy_sbom
- MegaLinter key: [REPOSITORY_TRIVY_SBOM]
- Rules config: identified by [trivy-sbom]
::endgroup::
[GitHub Status Reporter] Error posting Status for SPELLwith lychee: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [SPELL] files with [lychee] successfully - (0.29s)[0m (expand for details)
- Using [lychee v0.13.0] https://megalinter.io/7.3.0/descriptors/spell_lychee
- MegaLinter key: [SPELL_LYCHEE]
- Rules config: identified by [lychee]
- Number of files analyzed: [2]
::endgroup::
[GitHub Status Reporter] Error posting Status for ARMwith arm-ttk: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [ARM] files with [arm-ttk] successfully - (5.08s)[0m (expand for details)
- Using [arm-ttk v0.0.0] https://megalinter.io/7.3.0/descriptors/arm_arm_ttk
- MegaLinter key: [ARM_ARM_TTK]
- Rules config: [.arm-ttk.psd1]
- Number of files analyzed: [1]
::endgroup::
[GitHub Status Reporter] Error posting Status for JSONwith jsonlint: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [JSON] files with [jsonlint] successfully - (0.15s)[0m (expand for details)
- Using [jsonlint v14.0.3] https://megalinter.io/7.3.0/descriptors/json_jsonlint
- MegaLinter key: [JSON_JSONLINT]
- Rules config: identified by [jsonlint]
- Number of files analyzed: [1]
::endgroup::
[GitHub Status Reporter] Error posting Status for REPOSITORYwith dustilock: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [REPOSITORY] files with [dustilock] successfully - (0.03s)[0m (expand for details)
- Using [dustilock v1.2.0] https://megalinter.io/7.3.0/descriptors/repository_dustilock
- MegaLinter key: [REPOSITORY_DUSTILOCK]
- Rules config: identified by [dustilock]
::endgroup::
[GitHub Status Reporter] Error posting Status for REPOSITORYwith syft: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [REPOSITORY] files with [syft] successfully - (0.24s)[0m (expand for details)
- Using [syft v0.86.1] https://megalinter.io/7.3.0/descriptors/repository_syft
- MegaLinter key: [REPOSITORY_SYFT]
- Rules config: identified by [syft]
::endgroup::
[GitHub Status Reporter] Error posting Status for TERRAFORMwith tflint: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[33m✅ Linted [TERRAFORM] files with [tflint]: Found 1 non blocking error(s) - (0.38s)[0m (expand for details)
- Using [tflint v0.47.0] https://megalinter.io/7.3.0/descriptors/terraform_tflint
- MegaLinter key: [TERRAFORM_TFLINT]
- Rules config: [.tflint.hcl]
[Pre][TERRAFORM_TFLINT] run: [tflint --init --config /action/lib/.automation/.tflint.hcl] in cwd [/github/workspace]
[Pre][TERRAFORM_TFLINT] error:
Installing `aws` plugin...
Failed to install a plugin; Failed to fetch GitHub releases: GET https://api.github.com/repos/terraform-linters/tflint-ruleset-aws/releases/tags/v0.23.1: 401 Bad credentials []

--Error detail:
Failed to initialize plugins; Plugin `aws` not found. Did you run `tflint --init`?

::endgroup::
[GitHub Status Reporter] Error posting Status for REPOSITORYwith checkov: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[33m✅ Linted [REPOSITORY] files with [checkov]: Found 215 non blocking error(s) - (38.48s)[0m (expand for details)
- Using [checkov v2.3.360] https://megalinter.io/7.3.0/descriptors/repository_checkov
- MegaLinter key: [REPOSITORY_CHECKOV]
- Rules config: [.checkov.yml]
--Error detail:
2023-08-25 13:24:08,257 [MainThread  ] [WARNI]  Module /github/workspace/terraform/functionapp/modules/app/examples/modules/app:latest failed to load via <class 'checkov.terraform.module_loading.loaders.local_path_loader.LocalPathLoader'>
2023-08-25 13:24:08,257 [MainThread  ] [WARNI]  Unable to load module - source: /github/workspace/terraform/functionapp/modules/app/examples/modules/app, version: latest, error: /github/workspace/terraform/functionapp/modules/app/examples/modules/app
2023-08-25 13:24:08,257 [MainThread  ] [WARNI]  Module /github/workspace/terraform/functionapp/modules/app/examples/modules/app:latest failed to load via <class 'checkov.terraform.module_loading.loaders.local_path_loader.LocalPathLoader'>
2023-08-25 13:24:08,257 [MainThread  ] [WARNI]  Unable to load module - source: /github/workspace/terraform/functionapp/modules/app/examples/modules/app, version: latest, error: /github/workspace/terraform/functionapp/modules/app/examples/modules/app
2023-08-25 13:24:08,257 [MainThread  ] [WARNI]  Module /github/workspace/terraform/functionapp/modules/app/examples/modules/app:latest failed to load via <class 'checkov.terraform.module_loading.loaders.local_path_loader.LocalPathLoader'>
2023-08-25 13:24:08,257 [MainThread  ] [WARNI]  Unable to load module - source: /github/workspace/terraform/functionapp/modules/app/examples/modules/app, version: latest, error: /github/workspace/terraform/functionapp/modules/app/examples/modules/app
terraform scan results:

Passed checks: 83, Failed checks: 164, Skipped checks: 0

Check: CKV_AZURE_168: "Ensure Azure Kubernetes Cluster (AKS) nodes should use a minimum number of 50 pods."
	FAILED for resource: azurerm_kubernetes_cluster.k8s
	File: /terraform/agic/aks.tf:1-46

		1  | resource "azurerm_kubernetes_cluster" "k8s" {
		2  |   name                    = var.aks_name
		3  |   location                = azurerm_resource_group.rg.location
		4  |   dns_prefix              = var.aks_dns_prefix
		5  |   private_cluster_enabled = true
		6  | 
		7  |   resource_group_name = azurerm_resource_group.rg.name
		8  | 
		9  |   http_application_routing_enabled = false
		10 | 
		11 |   default_node_pool {
		12 |     name            = "agentpool"
		13 |     node_count      = var.aks_agent_count
		14 |     vm_size         = var.aks_agent_vm_size
		15 |     os_disk_size_gb = var.aks_agent_os_disk_size
		16 |     vnet_subnet_id  = resource.azurerm_subnet.kubesubnet.id
		17 |   }
		18 | 
		19 |   identity {
		20 |     type = "SystemAssigned"
		21 |   }
		22 | 
		23 |   network_profile {
		24 |     network_plugin     = "azure"
		25 |     dns_service_ip     = var.aks_dns_service_ip
		26 |     docker_bridge_cidr = var.aks_docker_bridge_cidr
		27 |     service_cidr       = var.aks_service_cidr
		28 |     load_balancer_sku  = "standard"
		29 |   }
		30 | 
		31 |   ingress_application_gateway {
		32 |     gateway_id = azurerm_application_gateway.network.id
		33 |   }
		34 | 
		35 |   azure_active_directory_role_based_access_control {
		36 |     managed                = true
		37 |     azure_rbac_enabled     = true
		38 |     admin_group_object_ids = var.admin_group_object_ids
		39 |   }
		40 | 
		41 |   depends_on = [
		42 |     azurerm_virtual_network.test,
		43 |     azurerm_application_gateway.network
		44 |   ]
		45 |   tags = var.tags
		46 | }

Check: CKV_AZURE_4: "Ensure AKS logging to Azure Monitoring is Configured"
	FAILED for resource: azurerm_kubernetes_cluster.k8s
	File: /terraform/agic/aks.tf:1-46
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-kubernetes-policies/bc-azr-kubernetes-1.html

		1  | resource "azurerm_kubernetes_cluster" "k8s" {
		2  |   name                    = var.aks_name
		3  |   location                = azurerm_resource_group.rg.location
		4  |   dns_prefix              = var.aks_dns_prefix
		5  |   private_cluster_enabled = true
		6  | 
		7  |   resource_group_name = azurerm_resource_group.rg.name
		8  | 
		9  |   http_application_routing_enabled = false
		10 | 
		11 |   default_node_pool {
		12 |     name            = "agentpool"
		13 |     node_count      = var.aks_agent_count
		14 |     vm_size         = var.aks_agent_vm_size
		15 |     os_disk_size_gb = var.aks_agent_os_disk_size
		16 |     vnet_subnet_id  = resource.azurerm_subnet.kubesubnet.id
		17 |   }
		18 | 
		19 |   identity {
		20 |     type = "SystemAssigned"
		21 |   }
		22 | 
		23 |   network_profile {
		24 |     network_plugin     = "azure"
		25 |     dns_service_ip     = var.aks_dns_service_ip
		26 |     docker_bridge_cidr = var.aks_docker_bridge_cidr
		27 |     service_cidr       = var.aks_service_cidr
		28 |     load_balancer_sku  = "standard"
		29 |   }
		30 | 
		31 |   ingress_application_gateway {
		32 |     gateway_id = azurerm_application_gateway.network.id
		33 |   }
		34 | 
		35 |   azure_active_directory_role_based_access_control {
		36 |     managed                = true
		37 |     azure_rbac_enabled     = true
		38 |     admin_group_object_ids = var.admin_group_object_ids
		39 |   }
		40 | 
		41 |   depends_on = [
		42 |     azurerm_virtual_network.test,
		43 |     azurerm_application_gateway.network
		44 |   ]
		45 |   tags = var.tags
		46 | }

Check: CKV_AZURE_171: "Ensure AKS cluster upgrade channel is chosen"
	FAILED for resource: azurerm_kubernetes_cluster.k8s
	File: /terraform/agic/aks.tf:1-46

		1  | resource "azurerm_kubernetes_cluster" "k8s" {
		2  |   name                    = var.aks_name
		3  |   location                = azurerm_resource_group.rg.location
		4  |   dns_prefix              = var.aks_dns_prefix
		5  |   private_cluster_enabled = true
		6  | 
		7  |   resource_group_name = azurerm_resource_group.rg.name
		8  | 
		9  |   http_application_routing_enabled = false
		10 | 
		11 |   default_node_pool {
		12 |     name            = "agentpool"
		13 |     node_count      = var.aks_agent_count
		14 |     vm_size         = var.aks_agent_vm_size
		15 |     os_disk_size_gb = var.aks_agent_os_disk_size
		16 |     vnet_subnet_id  = resource.azurerm_subnet.kubesubnet.id
		17 |   }
		18 | 
		19 |   identity {
		20 |     type = "SystemAssigned"
		21 |   }
		22 | 
		23 |   network_profile {
		24 |     network_plugin     = "azure"
		25 |     dns_service_ip     = var.aks_dns_service_ip
		26 |     docker_bridge_cidr = var.aks_docker_bridge_cidr
		27 |     service_cidr       = var.aks_service_cidr
		28 |     load_balancer_sku  = "standard"
		29 |   }
		30 | 
		31 |   ingress_application_gateway {
		32 |     gateway_id = azurerm_application_gateway.network.id
		33 |   }
		34 | 
		35 |   azure_active_directory_role_based_access_control {
		36 |     managed                = true
		37 |     azure_rbac_enabled     = true
		38 |     admin_group_object_ids = var.admin_group_object_ids
		39 |   }
		40 | 
		41 |   depends_on = [
		42 |     azurerm_virtual_network.test,
		43 |     azurerm_application_gateway.network
		44 |   ]
		45 |   tags = var.tags
		46 | }

Check: CKV_AZURE_141: "Ensure AKS local admin account is disabled"
	FAILED for resource: azurerm_kubernetes_cluster.k8s
	File: /terraform/agic/aks.tf:1-46
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-iam-policies/ensure-azure-kubernetes-service-aks-local-admin-account-is-disabled.html

		1  | resource "azurerm_kubernetes_cluster" "k8s" {
		2  |   name                    = var.aks_name
		3  |   location                = azurerm_resource_group.rg.location
		4  |   dns_prefix              = var.aks_dns_prefix
		5  |   private_cluster_enabled = true
		6  | 
		7  |   resource_group_name = azurerm_resource_group.rg.name
		8  | 
		9  |   http_application_routing_enabled = false
		10 | 
		11 |   default_node_pool {
		12 |     name            = "agentpool"
		13 |     node_count      = var.aks_agent_count
		14 |     vm_size         = var.aks_agent_vm_size
		15 |     os_disk_size_gb = var.aks_agent_os_disk_size
		16 |     vnet_subnet_id  = resource.azurerm_subnet.kubesubnet.id
		17 |   }
		18 | 
		19 |   identity {
		20 |     type = "SystemAssigned"
		21 |   }
		22 | 
		23 |   network_profile {
		24 |     network_plugin     = "azure"
		25 |     dns_service_ip     = var.aks_dns_service_ip
		26 |     docker_bridge_cidr = var.aks_docker_bridge_cidr
		27 |     service_cidr       = var.aks_service_cidr
		28 |     load_balancer_sku  = "standard"
		29 |   }
		30 | 
		31 |   ingress_application_gateway {
		32 |     gateway_id = azurerm_application_gateway.network.id
		33 |   }
		34 | 
		35 |   azure_active_directory_role_based_access_control {
		36 |     managed                = true
		37 |     azure_rbac_enabled     = true
		38 |     admin_group_object_ids = var.admin_group_object_ids
		39 |   }
		40 | 
		41 |   depends_on = [
		42 |     azurerm_virtual_network.test,
		43 |     azurerm_application_gateway.network
		44 |   ]
		45 |   tags = var.tags
		46 | }

Check: CKV_AZURE_172: "Ensure autorotation of Secrets Store CSI Driver secrets for AKS clusters"
	FAILED for resource: azurerm_kubernetes_cluster.k8s
	File: /terraform/agic/aks.tf:1-46

		1  | resource "azurerm_kubernetes_cluster" "k8s" {
		2  |   name                    = var.aks_name
		3  |   location                = azurerm_resource_group.rg.location
		4  |   dns_prefix              = var.aks_dns_prefix
		5  |   private_cluster_enabled = true
		6  | 
		7  |   resource_group_name = azurerm_resource_group.rg.name
		8  | 
		9  |   http_application_routing_enabled = false
		10 | 
		11 |   default_node_pool {
		12 |     name            = "agentpool"
		13 |     node_count      = var.aks_agent_count
		14 |     vm_size         = var.aks_agent_vm_size
		15 |     os_disk_size_gb = var.aks_agent_os_disk_size
		16 |     vnet_subnet_id  = resource.azurerm_subnet.kubesubnet.id
		17 |   }
		18 | 
		19 |   identity {
		20 |     type = "SystemAssigned"
		21 |   }
		22 | 
		23 |   network_profile {
		24 |     network_plugin     = "azure"
		25 |     dns_service_ip     = var.aks_dns_service_ip
		26 |     docker_bridge_cidr = var.aks_docker_bridge_cidr
		27 |     service_cidr       = var.aks_service_cidr
		28 |     load_balancer_sku  = "standard"
		29 |   }
		30 | 
		31 |   ingress_application_gateway {
		32 |     gateway_id = azurerm_application_gateway.network.id
		33 |   }
		34 | 
		35 |   azure_active_directory_role_based_access_control {
		36 |     managed                = true
		37 |     azure_rbac_enabled     = true
		38 |     admin_group_object_ids = var.admin_group_object_ids
		39 |   }
		40 | 
		41 |   depends_on = [
		42 |     azurerm_virtual_network.test,
		43 |     azurerm_application_gateway.network
		44 |   ]
		45 |   tags = var.tags
		46 | }

Check: CKV_AZURE_7: "Ensure AKS cluster has Network Policy configured"
	FAILED for resource: azurerm_kubernetes_cluster.k8s
	File: /terraform/agic/aks.tf:1-46
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-kubernetes-policies/bc-azr-kubernetes-4.html

		1  | resource "azurerm_kubernetes_cluster" "k8s" {
		2  |   name                    = var.aks_name
		3  |   location                = azurerm_resource_group.rg.location
		4  |   dns_prefix              = var.aks_dns_prefix
		5  |   private_cluster_enabled = true
		6  | 
		7  |   resource_group_name = azurerm_resource_group.rg.name
		8  | 
		9  |   http_application_routing_enabled = false
		10 | 
		11 |   default_node_pool {
		12 |     name            = "agentpool"
		13 |     node_count      = var.aks_agent_count
		14 |     vm_size         = var.aks_agent_vm_size
		15 |     os_disk_size_gb = var.aks_agent_os_disk_size
		16 |     vnet_subnet_id  = resource.azurerm_subnet.kubesubnet.id
		17 |   }
		18 | 
		19 |   identity {
		20 |     type = "SystemAssigned"
		21 |   }
		22 | 
		23 |   network_profile {
		24 |     network_plugin     = "azure"
		25 |     dns_service_ip     = var.aks_dns_service_ip
		26 |     docker_bridge_cidr = var.aks_docker_bridge_cidr
		27 |     service_cidr       = var.aks_service_cidr
		28 |     load_balancer_sku  = "standard"
		29 |   }
		30 | 
		31 |   ingress_application_gateway {
		32 |     gateway_id = azurerm_application_gateway.network.id
		33 |   }
		34 | 
		35 |   azure_active_directory_role_based_access_control {
		36 |     managed                = true
		37 |     azure_rbac_enabled     = true
		38 |     admin_group_object_ids = var.admin_group_object_ids
		39 |   }
		40 | 
		41 |   depends_on = [
		42 |     azurerm_virtual_network.test,
		43 |     azurerm_application_gateway.network
		44 |   ]
		45 |   tags = var.tags
		46 | }

Check: CKV_AZURE_117: "Ensure that AKS uses disk encryption set"
	FAILED for resource: azurerm_kubernetes_cluster.k8s
	File: /terraform/agic/aks.tf:1-46
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-kubernetes-policies/ensure-that-aks-uses-disk-encryption-set.html

		1  | resource "azurerm_kubernetes_cluster" "k8s" {
		2  |   name                    = var.aks_name
		3  |   location                = azurerm_resource_group.rg.location
		4  |   dns_prefix              = var.aks_dns_prefix
		5  |   private_cluster_enabled = true
		6  | 
		7  |   resource_group_name = azurerm_resource_group.rg.name
		8  | 
		9  |   http_application_routing_enabled = false
		10 | 
		11 |   default_node_pool {
		12 |     name            = "agentpool"
		13 |     node_count      = var.aks_agent_count
		14 |     vm_size         = var.aks_agent_vm_size
		15 |     os_disk_size_gb = var.aks_agent_os_disk_size
		16 |     vnet_subnet_id  = resource.azurerm_subnet.kubesubnet.id
		17 |   }
		18 | 
		19 |   identity {
		20 |     type = "SystemAssigned"
		21 |   }
		22 | 
		23 |   network_profile {
		24 |     network_plugin     = "azure"
		25 |     dns_service_ip     = var.aks_dns_service_ip
		26 |     docker_bridge_cidr = var.aks_docker_bridge_cidr
		27 |     service_cidr       = var.aks_service_cidr
		28 |     load_balancer_sku  = "standard"
		29 |   }
		30 | 
		31 |   ingress_application_gateway {
		32 |     gateway_id = azurerm_application_gateway.network.id
		33 |   }
		34 | 
		35 |   azure_active_directory_role_based_access_control {
		36 |     managed                = true
		37 |     azure_rbac_enabled     = true
		38 |     admin_group_object_ids = var.admin_group_object_ids
		39 |   }
		40 | 
		41 |   depends_on = [
		42 |     azurerm_virtual_network.test,
		43 |     azurerm_application_gateway.network
		44 |   ]
		45 |   tags = var.tags
		46 | }

Check: CKV_AZURE_116: "Ensure that AKS uses Azure Policies Add-on"
	FAILED for resource: azurerm_kubernetes_cluster.k8s
	File: /terraform/agic/aks.tf:1-46
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-kubernetes-policies/ensure-that-aks-uses-azure-policies-add-on.html

		1  | resource "azurerm_kubernetes_cluster" "k8s" {
		2  |   name                    = var.aks_name
		3  |   location                = azurerm_resource_group.rg.location
		4  |   dns_prefix              = var.aks_dns_prefix
		5  |   private_cluster_enabled = true
		6  | 
		7  |   resource_group_name = azurerm_resource_group.rg.name
		8  | 
		9  |   http_application_routing_enabled = false
		10 | 
		11 |   default_node_pool {
		12 |     name            = "agentpool"
		13 |     node_count      = var.aks_agent_count
		14 |     vm_size         = var.aks_agent_vm_size
		15 |     os_disk_size_gb = var.aks_agent_os_disk_size
		16 |     vnet_subnet_id  = resource.azurerm_subnet.kubesubnet.id
		17 |   }
		18 | 
		19 |   identity {
		20 |     type = "SystemAssigned"
		21 |   }
		22 | 
		23 |   network_profile {
		24 |     network_plugin     = "azure"
		25 |     dns_service_ip     = var.aks_dns_service_ip
		26 |     docker_bridge_cidr = var.aks_docker_bridge_cidr
		27 |     service_cidr       = var.aks_service_cidr
		28 |     load_balancer_sku  = "standard"
		29 |   }
		30 | 
		31 |   ingress_application_gateway {
		32 |     gateway_id = azurerm_application_gateway.network.id
		33 |   }
		34 | 
		35 |   azure_active_directory_role_based_access_control {
		36 |     managed                = true
		37 |     azure_rbac_enabled     = true
		38 |     admin_group_object_ids = var.admin_group_object_ids
		39 |   }
		40 | 
		41 |   depends_on = [
		42 |     azurerm_virtual_network.test,
		43 |     azurerm_application_gateway.network
		44 |   ]
		45 |   tags = var.tags
		46 | }

Check: CKV_AZURE_170: "Ensure that AKS use the Paid Sku for its SLA"
	FAILED for resource: azurerm_kubernetes_cluster.k8s
	File: /terraform/agic/aks.tf:1-46

		1  | resource "azurerm_kubernetes_cluster" "k8s" {
		2  |   name                    = var.aks_name
		3  |   location                = azurerm_resource_group.rg.location
		4  |   dns_prefix              = var.aks_dns_prefix
		5  |   private_cluster_enabled = true
		6  | 
		7  |   resource_group_name = azurerm_resource_group.rg.name
		8  | 
		9  |   http_application_routing_enabled = false
		10 | 
		11 |   default_node_pool {
		12 |     name            = "agentpool"
		13 |     node_count      = var.aks_agent_count
		14 |     vm_size         = var.aks_agent_vm_size
		15 |     os_disk_size_gb = var.aks_agent_os_disk_size
		16 |     vnet_subnet_id  = resource.azurerm_subnet.kubesubnet.id
		17 |   }
		18 | 
		19 |   identity {
		20 |     type = "SystemAssigned"
		21 |   }
		22 | 
		23 |   network_profile {
		24 |     network_plugin     = "azure"
		25 |     dns_service_ip     = var.aks_dns_service_ip
		26 |     docker_bridge_cidr = var.aks_docker_bridge_cidr
		27 |     service_cidr       = var.aks_service_cidr
		28 |     load_balancer_sku  = "standard"
		29 |   }
		30 | 
		31 |   ingress_application_gateway {
		32 |     gateway_id = azurerm_application_gateway.network.id
		33 |   }
		34 | 
		35 |   azure_active_directory_role_based_access_control {
		36 |     managed                = true
		37 |     azure_rbac_enabled     = true
		38 |     admin_group_object_ids = var.admin_group_object_ids
		39 |   }
		40 | 
		41 |   depends_on = [
		42 |     azurerm_virtual_network.test,
		43 |     azurerm_application_gateway.network
		44 |   ]
		45 |   tags = var.tags
		46 | }

Check: CKV_AZURE_218: "Ensure Application Gateway defines secure protocols for in transit communication"
	FAILED for resource: azurerm_application_gateway.network
	File: /terraform/agic/appgw.tf:19-100

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AZURE_217: "Ensure Azure Application gateways listener that allow connection requests over HTTP"
	FAILED for resource: azurerm_application_gateway.network
	File: /terraform/agic/appgw.tf:19-100

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AZURE_1: "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)"
	FAILED for resource: azurerm_linux_virtual_machine.jumpbox
	File: /terraform/agic/jumpbox.tf:42-67
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-1.html

		42 | resource "azurerm_linux_virtual_machine" "jumpbox" {
		43 |   name                = "jumpbox"
		44 |   resource_group_name = azurerm_resource_group.rg.name
		45 |   location            = azurerm_resource_group.rg.location
		46 |   size                = "Standard_D2s_v3"
		47 |   admin_username      = var.jumpbox_admin_username
		48 |   admin_password      = var.jumpbox_admin_password
		49 | 
		50 |   disable_password_authentication = false
		51 | 
		52 |   network_interface_ids = [
		53 |     azurerm_network_interface.jumpbox.id,
		54 |   ]
		55 | 
		56 |   os_disk {
		57 |     caching              = "ReadWrite"
		58 |     storage_account_type = "Standard_LRS"
		59 |   }
		60 | 
		61 |   source_image_reference {
		62 |     publisher = "Canonical"
		63 |     offer     = "0001-com-ubuntu-server-kinetic-daily"
		64 |     sku       = "22_10-daily"
		65 |     version   = "latest"
		66 |   }
		67 | }

Check: CKV_AZURE_149: "Ensure that Virtual machine does not enable password authentication"
	FAILED for resource: azurerm_linux_virtual_machine.jumpbox
	File: /terraform/agic/jumpbox.tf:42-67
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-azure-virtual-machine-does-not-enable-password-authentication.html

		42 | resource "azurerm_linux_virtual_machine" "jumpbox" {
		43 |   name                = "jumpbox"
		44 |   resource_group_name = azurerm_resource_group.rg.name
		45 |   location            = azurerm_resource_group.rg.location
		46 |   size                = "Standard_D2s_v3"
		47 |   admin_username      = var.jumpbox_admin_username
		48 |   admin_password      = var.jumpbox_admin_password
		49 | 
		50 |   disable_password_authentication = false
		51 | 
		52 |   network_interface_ids = [
		53 |     azurerm_network_interface.jumpbox.id,
		54 |   ]
		55 | 
		56 |   os_disk {
		57 |     caching              = "ReadWrite"
		58 |     storage_account_type = "Standard_LRS"
		59 |   }
		60 | 
		61 |   source_image_reference {
		62 |     publisher = "Canonical"
		63 |     offer     = "0001-com-ubuntu-server-kinetic-daily"
		64 |     sku       = "22_10-daily"
		65 |     version   = "latest"
		66 |   }
		67 | }

Check: CKV_AZURE_178: "Ensure linux VM enables SSH with keys for secure communication"
	FAILED for resource: azurerm_linux_virtual_machine.jumpbox
	File: /terraform/agic/jumpbox.tf:42-67

		42 | resource "azurerm_linux_virtual_machine" "jumpbox" {
		43 |   name                = "jumpbox"
		44 |   resource_group_name = azurerm_resource_group.rg.name
		45 |   location            = azurerm_resource_group.rg.location
		46 |   size                = "Standard_D2s_v3"
		47 |   admin_username      = var.jumpbox_admin_username
		48 |   admin_password      = var.jumpbox_admin_password
		49 | 
		50 |   disable_password_authentication = false
		51 | 
		52 |   network_interface_ids = [
		53 |     azurerm_network_interface.jumpbox.id,
		54 |   ]
		55 | 
		56 |   os_disk {
		57 |     caching              = "ReadWrite"
		58 |     storage_account_type = "Standard_LRS"
		59 |   }
		60 | 
		61 |   source_image_reference {
		62 |     publisher = "Canonical"
		63 |     offer     = "0001-com-ubuntu-server-kinetic-daily"
		64 |     sku       = "22_10-daily"
		65 |     version   = "latest"
		66 |   }
		67 | }

Check: CKV_AZURE_50: "Ensure Virtual Machine Extensions are not Installed"
	FAILED for resource: azurerm_linux_virtual_machine.jumpbox
	File: /terraform/agic/jumpbox.tf:42-67
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/bc-azr-general-14.html

		42 | resource "azurerm_linux_virtual_machine" "jumpbox" {
		43 |   name                = "jumpbox"
		44 |   resource_group_name = azurerm_resource_group.rg.name
		45 |   location            = azurerm_resource_group.rg.location
		46 |   size                = "Standard_D2s_v3"
		47 |   admin_username      = var.jumpbox_admin_username
		48 |   admin_password      = var.jumpbox_admin_password
		49 | 
		50 |   disable_password_authentication = false
		51 | 
		52 |   network_interface_ids = [
		53 |     azurerm_network_interface.jumpbox.id,
		54 |   ]
		55 | 
		56 |   os_disk {
		57 |     caching              = "ReadWrite"
		58 |     storage_account_type = "Standard_LRS"
		59 |   }
		60 | 
		61 |   source_image_reference {
		62 |     publisher = "Canonical"
		63 |     offer     = "0001-com-ubuntu-server-kinetic-daily"
		64 |     sku       = "22_10-daily"
		65 |     version   = "latest"
		66 |   }
		67 | }

Check: CKV_AZURE_212: "Ensure App Service has a minimum number of instances for failover"
	FAILED for resource: azurerm_service_plan.example[0]
	File: /terraform/appgateway/app.tf:20-27

		20 | resource "azurerm_service_plan" "example" {
		21 |   count               = length(local.app_services)
		22 |   name                = "${lower(local.app_services[count.index].kind)}-asp"
		23 |   location            = azurerm_resource_group.example.location
		24 |   resource_group_name = azurerm_resource_group.example.name
		25 |   sku_name            = "B1"
		26 |   os_type             = "Windows"
		27 | }

Check: CKV_AZURE_211: "Ensure App Service plan suitable for production use"
	FAILED for resource: azurerm_service_plan.example[0]
	File: /terraform/appgateway/app.tf:20-27

		20 | resource "azurerm_service_plan" "example" {
		21 |   count               = length(local.app_services)
		22 |   name                = "${lower(local.app_services[count.index].kind)}-asp"
		23 |   location            = azurerm_resource_group.example.location
		24 |   resource_group_name = azurerm_resource_group.example.name
		25 |   sku_name            = "B1"
		26 |   os_type             = "Windows"
		27 | }

Check: CKV_AZURE_17: "Ensure the web app has 'Client Certificates (Incoming client certificates)' set"
	FAILED for resource: azurerm_windows_web_app.example[0]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-7.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_16: "Ensure that Register with Azure Active Directory is enabled on App Service"
	FAILED for resource: azurerm_windows_web_app.example[0]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-iam-policies/bc-azr-iam-1.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_66: "Ensure that App service enables failed request tracing"
	FAILED for resource: azurerm_windows_web_app.example[0]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/ensure-that-app-service-enables-failed-request-tracing.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_18: "Ensure that 'HTTP Version' is the latest if used to run the web app"
	FAILED for resource: azurerm_windows_web_app.example[0]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-8.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_65: "Ensure that App service enables detailed error messages"
	FAILED for resource: azurerm_windows_web_app.example[0]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/tbdensure-that-app-service-enables-detailed-error-messages.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_71: "Ensure that Managed identity provider is enabled for app services"
	FAILED for resource: azurerm_windows_web_app.example[0]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-that-managed-identity-provider-is-enabled-for-app-services.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_88: "Ensure that app services use Azure Files"
	FAILED for resource: azurerm_windows_web_app.example[0]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-that-app-services-use-azure-files.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_13: "Ensure App Service Authentication is set on Azure App Service"
	FAILED for resource: azurerm_windows_web_app.example[0]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/bc-azr-general-2.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_213: "Ensure that App Service configures health check"
	FAILED for resource: azurerm_windows_web_app.example[0]
	File: /terraform/appgateway/app.tf:29-37

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_78: "Ensure FTP deployments are disabled"
	FAILED for resource: azurerm_windows_web_app.example[0]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-ftp-deployments-are-disabled.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_63: "Ensure that App service enables HTTP logging"
	FAILED for resource: azurerm_windows_web_app.example[0]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/ensure-that-app-service-enables-http-logging.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_14: "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service"
	FAILED for resource: azurerm_windows_web_app.example[0]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-5.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_212: "Ensure App Service has a minimum number of instances for failover"
	FAILED for resource: azurerm_service_plan.example[1]
	File: /terraform/appgateway/app.tf:20-27

		20 | resource "azurerm_service_plan" "example" {
		21 |   count               = length(local.app_services)
		22 |   name                = "${lower(local.app_services[count.index].kind)}-asp"
		23 |   location            = azurerm_resource_group.example.location
		24 |   resource_group_name = azurerm_resource_group.example.name
		25 |   sku_name            = "B1"
		26 |   os_type             = "Windows"
		27 | }

Check: CKV_AZURE_211: "Ensure App Service plan suitable for production use"
	FAILED for resource: azurerm_service_plan.example[1]
	File: /terraform/appgateway/app.tf:20-27

		20 | resource "azurerm_service_plan" "example" {
		21 |   count               = length(local.app_services)
		22 |   name                = "${lower(local.app_services[count.index].kind)}-asp"
		23 |   location            = azurerm_resource_group.example.location
		24 |   resource_group_name = azurerm_resource_group.example.name
		25 |   sku_name            = "B1"
		26 |   os_type             = "Windows"
		27 | }

Check: CKV_AZURE_17: "Ensure the web app has 'Client Certificates (Incoming client certificates)' set"
	FAILED for resource: azurerm_windows_web_app.example[1]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-7.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_16: "Ensure that Register with Azure Active Directory is enabled on App Service"
	FAILED for resource: azurerm_windows_web_app.example[1]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-iam-policies/bc-azr-iam-1.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_66: "Ensure that App service enables failed request tracing"
	FAILED for resource: azurerm_windows_web_app.example[1]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/ensure-that-app-service-enables-failed-request-tracing.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_18: "Ensure that 'HTTP Version' is the latest if used to run the web app"
	FAILED for resource: azurerm_windows_web_app.example[1]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-8.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_65: "Ensure that App service enables detailed error messages"
	FAILED for resource: azurerm_windows_web_app.example[1]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/tbdensure-that-app-service-enables-detailed-error-messages.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_71: "Ensure that Managed identity provider is enabled for app services"
	FAILED for resource: azurerm_windows_web_app.example[1]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-that-managed-identity-provider-is-enabled-for-app-services.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_88: "Ensure that app services use Azure Files"
	FAILED for resource: azurerm_windows_web_app.example[1]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-that-app-services-use-azure-files.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_13: "Ensure App Service Authentication is set on Azure App Service"
	FAILED for resource: azurerm_windows_web_app.example[1]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/bc-azr-general-2.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_213: "Ensure that App Service configures health check"
	FAILED for resource: azurerm_windows_web_app.example[1]
	File: /terraform/appgateway/app.tf:29-37

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_78: "Ensure FTP deployments are disabled"
	FAILED for resource: azurerm_windows_web_app.example[1]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-ftp-deployments-are-disabled.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_63: "Ensure that App service enables HTTP logging"
	FAILED for resource: azurerm_windows_web_app.example[1]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/ensure-that-app-service-enables-http-logging.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_14: "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service"
	FAILED for resource: azurerm_windows_web_app.example[1]
	File: /terraform/appgateway/app.tf:29-37
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-5.html

		29 | resource "azurerm_windows_web_app" "example" {
		30 |   count               = length(local.app_services)
		31 |   name                = "${lower(local.app_services[count.index].kind)}-appservice"
		32 |   location            = azurerm_resource_group.example.location
		33 |   resource_group_name = azurerm_resource_group.example.name
		34 |   service_plan_id     = azurerm_service_plan.example[count.index].id
		35 | 
		36 |   site_config {}
		37 | }

Check: CKV_AZURE_218: "Ensure Application Gateway defines secure protocols for in transit communication"
	FAILED for resource: azurerm_application_gateway.network
	File: /terraform/appgateway/gateway.tf:14-97

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AZURE_217: "Ensure Azure Application gateways listener that allow connection requests over HTTP"
	FAILED for resource: azurerm_application_gateway.network
	File: /terraform/appgateway/gateway.tf:14-97

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AZURE_110: "Ensure that key vault enables purge protection"
	FAILED for resource: module.functionapp-dev.azurerm_key_vault.kv
	File: /terraform/functionapp/modules/app/key_vault.tf:1-17
	Calling File: /terraform/functionapp/main.tf:4-9
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-that-key-vault-enables-purge-protection.html

		1  | resource "azurerm_key_vault" "kv" {
		2  |   location                   = azurerm_resource_group.rg.location
		3  |   name                       = "${local.resource_prefix}-kv"
		4  |   resource_group_name        = azurerm_resource_group.rg.name
		5  |   sku_name                   = "standard"
		6  |   tenant_id                  = data.azurerm_client_config.current.tenant_id
		7  |   enable_rbac_authorization  = true
		8  |   soft_delete_retention_days = 90
		9  | 
		10 |   network_acls {
		11 |     bypass                     = "AzureServices"
		12 |     default_action             = "Deny"
		13 |     ip_rules                   = azurerm_windows_function_app.app.outbound_ip_address_list
		14 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		15 |   }
		16 | 
		17 | }

Check: CKV_AZURE_42: "Ensure the key vault is recoverable"
	FAILED for resource: module.functionapp-dev.azurerm_key_vault.kv
	File: /terraform/functionapp/modules/app/key_vault.tf:1-17
	Calling File: /terraform/functionapp/main.tf:4-9
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-the-key-vault-is-recoverable.html

		1  | resource "azurerm_key_vault" "kv" {
		2  |   location                   = azurerm_resource_group.rg.location
		3  |   name                       = "${local.resource_prefix}-kv"
		4  |   resource_group_name        = azurerm_resource_group.rg.name
		5  |   sku_name                   = "standard"
		6  |   tenant_id                  = data.azurerm_client_config.current.tenant_id
		7  |   enable_rbac_authorization  = true
		8  |   soft_delete_retention_days = 90
		9  | 
		10 |   network_acls {
		11 |     bypass                     = "AzureServices"
		12 |     default_action             = "Deny"
		13 |     ip_rules                   = azurerm_windows_function_app.app.outbound_ip_address_list
		14 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		15 |   }
		16 | 
		17 | }

Check: CKV_AZURE_110: "Ensure that key vault enables purge protection"
	FAILED for resource: module.functionapp-test.azurerm_key_vault.kv
	File: /terraform/functionapp/modules/app/key_vault.tf:1-17
	Calling File: /terraform/functionapp/main.tf:11-18
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-that-key-vault-enables-purge-protection.html

		1  | resource "azurerm_key_vault" "kv" {
		2  |   location                   = azurerm_resource_group.rg.location
		3  |   name                       = "${local.resource_prefix}-kv"
		4  |   resource_group_name        = azurerm_resource_group.rg.name
		5  |   sku_name                   = "standard"
		6  |   tenant_id                  = data.azurerm_client_config.current.tenant_id
		7  |   enable_rbac_authorization  = true
		8  |   soft_delete_retention_days = 90
		9  | 
		10 |   network_acls {
		11 |     bypass                     = "AzureServices"
		12 |     default_action             = "Deny"
		13 |     ip_rules                   = azurerm_windows_function_app.app.outbound_ip_address_list
		14 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		15 |   }
		16 | 
		17 | }

Check: CKV_AZURE_42: "Ensure the key vault is recoverable"
	FAILED for resource: module.functionapp-test.azurerm_key_vault.kv
	File: /terraform/functionapp/modules/app/key_vault.tf:1-17
	Calling File: /terraform/functionapp/main.tf:11-18
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-the-key-vault-is-recoverable.html

		1  | resource "azurerm_key_vault" "kv" {
		2  |   location                   = azurerm_resource_group.rg.location
		3  |   name                       = "${local.resource_prefix}-kv"
		4  |   resource_group_name        = azurerm_resource_group.rg.name
		5  |   sku_name                   = "standard"
		6  |   tenant_id                  = data.azurerm_client_config.current.tenant_id
		7  |   enable_rbac_authorization  = true
		8  |   soft_delete_retention_days = 90
		9  | 
		10 |   network_acls {
		11 |     bypass                     = "AzureServices"
		12 |     default_action             = "Deny"
		13 |     ip_rules                   = azurerm_windows_function_app.app.outbound_ip_address_list
		14 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		15 |   }
		16 | 
		17 | }

Check: CKV_AZURE_212: "Ensure App Service has a minimum number of instances for failover"
	FAILED for resource: module.functionapp-dev.azurerm_service_plan.asp
	File: /terraform/functionapp/modules/app/main.tf:21-27
	Calling File: /terraform/functionapp/main.tf:4-9

		21 | resource "azurerm_service_plan" "asp" {
		22 |   location            = azurerm_resource_group.rg.location
		23 |   name                = "${local.resource_prefix}-asp"
		24 |   resource_group_name = azurerm_resource_group.rg.name
		25 |   os_type             = var.os_type
		26 |   sku_name            = var.sku_name
		27 | }

Check: CKV_AZURE_212: "Ensure App Service has a minimum number of instances for failover"
	FAILED for resource: module.functionapp-test.azurerm_service_plan.asp
	File: /terraform/functionapp/modules/app/main.tf:21-27
	Calling File: /terraform/functionapp/main.tf:11-18

		21 | resource "azurerm_service_plan" "asp" {
		22 |   location            = azurerm_resource_group.rg.location
		23 |   name                = "${local.resource_prefix}-asp"
		24 |   resource_group_name = azurerm_resource_group.rg.name
		25 |   os_type             = var.os_type
		26 |   sku_name            = var.sku_name
		27 | }

Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: module.functionapp-dev.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20
	Calling File: /terraform/functionapp/main.tf:4-9
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/set-default-network-access-rule-for-storage-accounts-to-deny.html

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV_AZURE_190: "Ensure that Storage blobs restrict public access"
	FAILED for resource: module.functionapp-dev.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20
	Calling File: /terraform/functionapp/main.tf:4-9

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV_AZURE_206: "Ensure that Storage Accounts use replication"
	FAILED for resource: module.functionapp-dev.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20
	Calling File: /terraform/functionapp/main.tf:4-9

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: module.functionapp-dev.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20
	Calling File: /terraform/functionapp/main.tf:4-9
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/enable-requests-on-storage-logging-for-queue-service.html

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	FAILED for resource: module.functionapp-dev.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20
	Calling File: /terraform/functionapp/main.tf:4-9
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-storage-accounts-disallow-public-access.html

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: module.functionapp-test.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20
	Calling File: /terraform/functionapp/main.tf:11-18
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/set-default-network-access-rule-for-storage-accounts-to-deny.html

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV_AZURE_190: "Ensure that Storage blobs restrict public access"
	FAILED for resource: module.functionapp-test.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20
	Calling File: /terraform/functionapp/main.tf:11-18

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV_AZURE_206: "Ensure that Storage Accounts use replication"
	FAILED for resource: module.functionapp-test.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20
	Calling File: /terraform/functionapp/main.tf:11-18

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: module.functionapp-test.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20
	Calling File: /terraform/functionapp/main.tf:11-18
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/enable-requests-on-storage-logging-for-queue-service.html

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	FAILED for resource: module.functionapp-test.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20
	Calling File: /terraform/functionapp/main.tf:11-18
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-storage-accounts-disallow-public-access.html

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV_AZURE_212: "Ensure App Service has a minimum number of instances for failover"
	FAILED for resource: azurerm_service_plan.plan
	File: /terraform/insecure/appservice/main.tf:10-17

		10 | resource "azurerm_service_plan" "plan" {
		11 |   location            = azurerm_resource_group.rg.location
		12 |   name                = "tf-insecure-app01-plan"
		13 |   os_type             = "Linux"
		14 |   resource_group_name = azurerm_resource_group.rg.name
		15 |   sku_name            = "F1"
		16 | 
		17 | }

Check: CKV_AZURE_211: "Ensure App Service plan suitable for production use"
	FAILED for resource: azurerm_service_plan.plan
	File: /terraform/insecure/appservice/main.tf:10-17

		10 | resource "azurerm_service_plan" "plan" {
		11 |   location            = azurerm_resource_group.rg.location
		12 |   name                = "tf-insecure-app01-plan"
		13 |   os_type             = "Linux"
		14 |   resource_group_name = azurerm_resource_group.rg.name
		15 |   sku_name            = "F1"
		16 | 
		17 | }

Check: CKV_AZURE_17: "Ensure the web app has 'Client Certificates (Incoming client certificates)' set"
	FAILED for resource: azurerm_app_service.app
	File: /terraform/insecure/appservice/main.tf:20-28
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-7.html

		20 | resource "azurerm_app_service" "app" {
		21 |   location            = azurerm_resource_group.rg.location
		22 |   name                = "tf-insecure-app01-as"
		23 |   resource_group_name = azurerm_resource_group.rg.name
		24 |   service_plan_id     = azurerm_service_plan.plan.id
		25 |   site_config {
		26 |   }
		27 | 
		28 | }

Check: CKV_AZURE_16: "Ensure that Register with Azure Active Directory is enabled on App Service"
	FAILED for resource: azurerm_app_service.app
	File: /terraform/insecure/appservice/main.tf:20-28
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-iam-policies/bc-azr-iam-1.html

		20 | resource "azurerm_app_service" "app" {
		21 |   location            = azurerm_resource_group.rg.location
		22 |   name                = "tf-insecure-app01-as"
		23 |   resource_group_name = azurerm_resource_group.rg.name
		24 |   service_plan_id     = azurerm_service_plan.plan.id
		25 |   site_config {
		26 |   }
		27 | 
		28 | }

Check: CKV_AZURE_66: "Ensure that App service enables failed request tracing"
	FAILED for resource: azurerm_app_service.app
	File: /terraform/insecure/appservice/main.tf:20-28
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/ensure-that-app-service-enables-failed-request-tracing.html

		20 | resource "azurerm_app_service" "app" {
		21 |   location            = azurerm_resource_group.rg.location
		22 |   name                = "tf-insecure-app01-as"
		23 |   resource_group_name = azurerm_resource_group.rg.name
		24 |   service_plan_id     = azurerm_service_plan.plan.id
		25 |   site_config {
		26 |   }
		27 | 
		28 | }

Check: CKV_AZURE_18: "Ensure that 'HTTP Version' is the latest if used to run the web app"
	FAILED for resource: azurerm_app_service.app
	File: /terraform/insecure/appservice/main.tf:20-28
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-8.html

		20 | resource "azurerm_app_service" "app" {
		21 |   location            = azurerm_resource_group.rg.location
		22 |   name                = "tf-insecure-app01-as"
		23 |   resource_group_name = azurerm_resource_group.rg.name
		24 |   service_plan_id     = azurerm_service_plan.plan.id
		25 |   site_config {
		26 |   }
		27 | 
		28 | }

Check: CKV_AZURE_65: "Ensure that App service enables detailed error messages"
	FAILED for resource: azurerm_app_service.app
	File: /terraform/insecure/appservice/main.tf:20-28
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/tbdensure-that-app-service-enables-detailed-error-messages.html

		20 | resource "azurerm_app_service" "app" {
		21 |   location            = azurerm_resource_group.rg.location
		22 |   name                = "tf-insecure-app01-as"
		23 |   resource_group_name = azurerm_resource_group.rg.name
		24 |   service_plan_id     = azurerm_service_plan.plan.id
		25 |   site_config {
		26 |   }
		27 | 
		28 | }

Check: CKV_AZURE_71: "Ensure that Managed identity provider is enabled for app services"
	FAILED for resource: azurerm_app_service.app
	File: /terraform/insecure/appservice/main.tf:20-28
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-that-managed-identity-provider-is-enabled-for-app-services.html

		20 | resource "azurerm_app_service" "app" {
		21 |   location            = azurerm_resource_group.rg.location
		22 |   name                = "tf-insecure-app01-as"
		23 |   resource_group_name = azurerm_resource_group.rg.name
		24 |   service_plan_id     = azurerm_service_plan.plan.id
		25 |   site_config {
		26 |   }
		27 | 
		28 | }

Check: CKV_AZURE_88: "Ensure that app services use Azure Files"
	FAILED for resource: azurerm_app_service.app
	File: /terraform/insecure/appservice/main.tf:20-28
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-that-app-services-use-azure-files.html

		20 | resource "azurerm_app_service" "app" {
		21 |   location            = azurerm_resource_group.rg.location
		22 |   name                = "tf-insecure-app01-as"
		23 |   resource_group_name = azurerm_resource_group.rg.name
		24 |   service_plan_id     = azurerm_service_plan.plan.id
		25 |   site_config {
		26 |   }
		27 | 
		28 | }

Check: CKV_AZURE_13: "Ensure App Service Authentication is set on Azure App Service"
	FAILED for resource: azurerm_app_service.app
	File: /terraform/insecure/appservice/main.tf:20-28
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/bc-azr-general-2.html

		20 | resource "azurerm_app_service" "app" {
		21 |   location            = azurerm_resource_group.rg.location
		22 |   name                = "tf-insecure-app01-as"
		23 |   resource_group_name = azurerm_resource_group.rg.name
		24 |   service_plan_id     = azurerm_service_plan.plan.id
		25 |   site_config {
		26 |   }
		27 | 
		28 | }

Check: CKV_AZURE_213: "Ensure that App Service configures health check"
	FAILED for resource: azurerm_app_service.app
	File: /terraform/insecure/appservice/main.tf:20-28

		20 | resource "azurerm_app_service" "app" {
		21 |   location            = azurerm_resource_group.rg.location
		22 |   name                = "tf-insecure-app01-as"
		23 |   resource_group_name = azurerm_resource_group.rg.name
		24 |   service_plan_id     = azurerm_service_plan.plan.id
		25 |   site_config {
		26 |   }
		27 | 
		28 | }

Check: CKV_AZURE_78: "Ensure FTP deployments are disabled"
	FAILED for resource: azurerm_app_service.app
	File: /terraform/insecure/appservice/main.tf:20-28
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-ftp-deployments-are-disabled.html

		20 | resource "azurerm_app_service" "app" {
		21 |   location            = azurerm_resource_group.rg.location
		22 |   name                = "tf-insecure-app01-as"
		23 |   resource_group_name = azurerm_resource_group.rg.name
		24 |   service_plan_id     = azurerm_service_plan.plan.id
		25 |   site_config {
		26 |   }
		27 | 
		28 | }

Check: CKV_AZURE_63: "Ensure that App service enables HTTP logging"
	FAILED for resource: azurerm_app_service.app
	File: /terraform/insecure/appservice/main.tf:20-28
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/ensure-that-app-service-enables-http-logging.html

		20 | resource "azurerm_app_service" "app" {
		21 |   location            = azurerm_resource_group.rg.location
		22 |   name                = "tf-insecure-app01-as"
		23 |   resource_group_name = azurerm_resource_group.rg.name
		24 |   service_plan_id     = azurerm_service_plan.plan.id
		25 |   site_config {
		26 |   }
		27 | 
		28 | }

Check: CKV_AZURE_14: "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service"
	FAILED for resource: azurerm_app_service.app
	File: /terraform/insecure/appservice/main.tf:20-28
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-5.html

		20 | resource "azurerm_app_service" "app" {
		21 |   location            = azurerm_resource_group.rg.location
		22 |   name                = "tf-insecure-app01-as"
		23 |   resource_group_name = azurerm_resource_group.rg.name
		24 |   service_plan_id     = azurerm_service_plan.plan.id
		25 |   site_config {
		26 |   }
		27 | 
		28 | }

Check: CKV_AZURE_189: "Ensure that Azure Key Vault disables public network access"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform/insecure/keyvault/main.tf:19-46

		19 | resource "azurerm_key_vault" "example" {
		20 |   name                        = "examplekeyvault"
		21 |   location                    = azurerm_resource_group.rg.location
		22 |   resource_group_name         = azurerm_resource_group.rg.name
		23 |   enabled_for_disk_encryption = true
		24 |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		25 |   soft_delete_retention_days  = 7
		26 |   purge_protection_enabled    = false
		27 | 
		28 |   sku_name = "standard"
		29 | 
		30 |   access_policy {
		31 |     tenant_id = data.azurerm_client_config.current.tenant_id
		32 |     object_id = data.azurerm_client_config.current.object_id
		33 | 
		34 |     key_permissions = [
		35 |       "Get",
		36 |     ]
		37 | 
		38 |     secret_permissions = [
		39 |       "Get",
		40 |     ]
		41 | 
		42 |     storage_permissions = [
		43 |       "Get",
		44 |     ]
		45 |   }
		46 | }

Check: CKV_AZURE_109: "Ensure that key vault allows firewall rules settings"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform/insecure/keyvault/main.tf:19-46
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-key-vault-allows-firewall-rules-settings.html

		19 | resource "azurerm_key_vault" "example" {
		20 |   name                        = "examplekeyvault"
		21 |   location                    = azurerm_resource_group.rg.location
		22 |   resource_group_name         = azurerm_resource_group.rg.name
		23 |   enabled_for_disk_encryption = true
		24 |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		25 |   soft_delete_retention_days  = 7
		26 |   purge_protection_enabled    = false
		27 | 
		28 |   sku_name = "standard"
		29 | 
		30 |   access_policy {
		31 |     tenant_id = data.azurerm_client_config.current.tenant_id
		32 |     object_id = data.azurerm_client_config.current.object_id
		33 | 
		34 |     key_permissions = [
		35 |       "Get",
		36 |     ]
		37 | 
		38 |     secret_permissions = [
		39 |       "Get",
		40 |     ]
		41 | 
		42 |     storage_permissions = [
		43 |       "Get",
		44 |     ]
		45 |   }
		46 | }

Check: CKV_AZURE_110: "Ensure that key vault enables purge protection"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform/insecure/keyvault/main.tf:19-46
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-that-key-vault-enables-purge-protection.html

		19 | resource "azurerm_key_vault" "example" {
		20 |   name                        = "examplekeyvault"
		21 |   location                    = azurerm_resource_group.rg.location
		22 |   resource_group_name         = azurerm_resource_group.rg.name
		23 |   enabled_for_disk_encryption = true
		24 |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		25 |   soft_delete_retention_days  = 7
		26 |   purge_protection_enabled    = false
		27 | 
		28 |   sku_name = "standard"
		29 | 
		30 |   access_policy {
		31 |     tenant_id = data.azurerm_client_config.current.tenant_id
		32 |     object_id = data.azurerm_client_config.current.object_id
		33 | 
		34 |     key_permissions = [
		35 |       "Get",
		36 |     ]
		37 | 
		38 |     secret_permissions = [
		39 |       "Get",
		40 |     ]
		41 | 
		42 |     storage_permissions = [
		43 |       "Get",
		44 |     ]
		45 |   }
		46 | }

Check: CKV_AZURE_42: "Ensure the key vault is recoverable"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform/insecure/keyvault/main.tf:19-46
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-the-key-vault-is-recoverable.html

		19 | resource "azurerm_key_vault" "example" {
		20 |   name                        = "examplekeyvault"
		21 |   location                    = azurerm_resource_group.rg.location
		22 |   resource_group_name         = azurerm_resource_group.rg.name
		23 |   enabled_for_disk_encryption = true
		24 |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		25 |   soft_delete_retention_days  = 7
		26 |   purge_protection_enabled    = false
		27 | 
		28 |   sku_name = "standard"
		29 | 
		30 |   access_policy {
		31 |     tenant_id = data.azurerm_client_config.current.tenant_id
		32 |     object_id = data.azurerm_client_config.current.object_id
		33 | 
		34 |     key_permissions = [
		35 |       "Get",
		36 |     ]
		37 | 
		38 |     secret_permissions = [
		39 |       "Get",
		40 |     ]
		41 | 
		42 |     storage_permissions = [
		43 |       "Get",
		44 |     ]
		45 |   }
		46 | }

Check: CKV_AZURE_114: "Ensure that key vault secrets have "content_type" set"
	FAILED for resource: azurerm_key_vault_secret.bad_example
	File: /terraform/insecure/keyvault/main.tf:48-52
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-that-key-vault-secrets-have-content-type-set.html

		48 | resource "azurerm_key_vault_secret" "bad_example" {
		49 |   name         = "secret-sauce"
		50 |   value        = "szechuan"
		51 |   key_vault_id = azurerm_key_vault.example.id
		52 | }

Check: CKV_AZURE_41: "Ensure that the expiration date is set on all secrets"
	FAILED for resource: azurerm_key_vault_secret.bad_example
	File: /terraform/insecure/keyvault/main.tf:48-52
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-secrets-policies/set-an-expiration-date-on-all-secrets.html

		48 | resource "azurerm_key_vault_secret" "bad_example" {
		49 |   name         = "secret-sauce"
		50 |   value        = "szechuan"
		51 |   key_vault_id = azurerm_key_vault.example.id
		52 | }

Check: CKV_AZURE_39: "Ensure that no custom subscription owner roles are created"
	FAILED for resource: azurerm_role_definition.example
	File: /terraform/insecure/role/main.tf:13-26
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-iam-policies/do-not-create-custom-subscription-owner-roles.html

		13 | resource "azurerm_role_definition" "example" {
		14 |   name        = "my-custom-role"
		15 |   scope       = data.azurerm_subscription.primary.id
		16 |   description = "This is a custom role created via Terraform"
		17 | 
		18 |   permissions {
		19 |     actions     = ["*"]
		20 |     not_actions = []
		21 |   }
		22 | 
		23 |   assignable_scopes = [
		24 |     "/"
		25 |   ]
		26 | }

Check: CKV_AZURE_160: "Ensure that HTTP (port 80) access is restricted from the internet"
	FAILED for resource: azurerm_network_security_group.nsg
	File: /terraform/insecure/vm/main.tf:45-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-azure-http-port-80-access-from-the-internet-is-restricted.html

		45 | resource "azurerm_network_security_group" "nsg" {
		46 |   location            = azurerm_resource_group.rg.location
		47 |   name                = "value"
		48 |   resource_group_name = azurerm_resource_group.rg.name
		49 | 
		50 |   security_rule {
		51 |     name                       = "test123"
		52 |     priority                   = 100
		53 |     direction                  = "Inbound"
		54 |     access                     = "Allow"
		55 |     protocol                   = "Tcp"
		56 |     source_port_range          = "*"
		57 |     destination_port_range     = "*"
		58 |     source_address_prefix      = "*"
		59 |     destination_address_prefix = "*"
		60 |   }
		61 | }

Check: CKV_AZURE_10: "Ensure that SSH access is restricted from the internet"
	FAILED for resource: azurerm_network_security_group.nsg
	File: /terraform/insecure/vm/main.tf:45-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-3.html

		45 | resource "azurerm_network_security_group" "nsg" {
		46 |   location            = azurerm_resource_group.rg.location
		47 |   name                = "value"
		48 |   resource_group_name = azurerm_resource_group.rg.name
		49 | 
		50 |   security_rule {
		51 |     name                       = "test123"
		52 |     priority                   = 100
		53 |     direction                  = "Inbound"
		54 |     access                     = "Allow"
		55 |     protocol                   = "Tcp"
		56 |     source_port_range          = "*"
		57 |     destination_port_range     = "*"
		58 |     source_address_prefix      = "*"
		59 |     destination_address_prefix = "*"
		60 |   }
		61 | }

Check: CKV_AZURE_9: "Ensure that RDP access is restricted from the internet"
	FAILED for resource: azurerm_network_security_group.nsg
	File: /terraform/insecure/vm/main.tf:45-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-2.html

		45 | resource "azurerm_network_security_group" "nsg" {
		46 |   location            = azurerm_resource_group.rg.location
		47 |   name                = "value"
		48 |   resource_group_name = azurerm_resource_group.rg.name
		49 | 
		50 |   security_rule {
		51 |     name                       = "test123"
		52 |     priority                   = 100
		53 |     direction                  = "Inbound"
		54 |     access                     = "Allow"
		55 |     protocol                   = "Tcp"
		56 |     source_port_range          = "*"
		57 |     destination_port_range     = "*"
		58 |     source_address_prefix      = "*"
		59 |     destination_address_prefix = "*"
		60 |   }
		61 | }

Check: CKV_AZURE_151: "Ensure Windows VM enables encryption"
	FAILED for resource: azurerm_windows_virtual_machine.vm1
	File: /terraform/insecure/vm/main.tf:63-85
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-iam-policies/ensure-azure-windows-vm-enables-encryption.html

		63 | resource "azurerm_windows_virtual_machine" "vm1" {
		64 |   name                = "tf-insecure-vm1"
		65 |   resource_group_name = azurerm_resource_group.rg.name
		66 |   location            = azurerm_resource_group.rg.location
		67 |   size                = "Standard_B2s"
		68 |   admin_username      = "administrator"
		69 |   admin_password      = "P@$$w0rd1234!"
		70 |   network_interface_ids = [
		71 |     azurerm_network_interface.vm1_nic.id,
		72 |   ]
		73 | 
		74 |   os_disk {
		75 |     caching              = "ReadWrite"
		76 |     storage_account_type = "Standard_LRS"
		77 |   }
		78 | 
		79 |   source_image_reference {
		80 |     publisher = "MicrosoftWindowsServer"
		81 |     offer     = "WindowsServer"
		82 |     sku       = "2022-Datacenter"
		83 |     version   = "latest"
		84 |   }
		85 | }

Check: CKV_AZURE_50: "Ensure Virtual Machine Extensions are not Installed"
	FAILED for resource: azurerm_windows_virtual_machine.vm1
	File: /terraform/insecure/vm/main.tf:63-85
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/bc-azr-general-14.html

		63 | resource "azurerm_windows_virtual_machine" "vm1" {
		64 |   name                = "tf-insecure-vm1"
		65 |   resource_group_name = azurerm_resource_group.rg.name
		66 |   location            = azurerm_resource_group.rg.location
		67 |   size                = "Standard_B2s"
		68 |   admin_username      = "administrator"
		69 |   admin_password      = "P@$$w0rd1234!"
		70 |   network_interface_ids = [
		71 |     azurerm_network_interface.vm1_nic.id,
		72 |   ]
		73 | 
		74 |   os_disk {
		75 |     caching              = "ReadWrite"
		76 |     storage_account_type = "Standard_LRS"
		77 |   }
		78 | 
		79 |   source_image_reference {
		80 |     publisher = "MicrosoftWindowsServer"
		81 |     offer     = "WindowsServer"
		82 |     sku       = "2022-Datacenter"
		83 |     version   = "latest"
		84 |   }
		85 | }

Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.logicapp_std_storage
	File: /terraform/logicapp/main.tf:45-51
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-storage-policies/bc-azr-storage-2.html

		45 | resource "azurerm_storage_account" "logicapp_std_storage" {
		46 |   name                     = "${var.context_prefix}${random_string.unique.result}${var.environment_name}sa"
		47 |   resource_group_name      = azurerm_resource_group.rg.name
		48 |   location                 = azurerm_resource_group.rg.location
		49 |   account_tier             = "Standard"
		50 |   account_replication_type = "LRS"
		51 | }

Check: CKV_AZURE_190: "Ensure that Storage blobs restrict public access"
	FAILED for resource: azurerm_storage_account.logicapp_std_storage
	File: /terraform/logicapp/main.tf:45-51

		45 | resource "azurerm_storage_account" "logicapp_std_storage" {
		46 |   name                     = "${var.context_prefix}${random_string.unique.result}${var.environment_name}sa"
		47 |   resource_group_name      = azurerm_resource_group.rg.name
		48 |   location                 = azurerm_resource_group.rg.location
		49 |   account_tier             = "Standard"
		50 |   account_replication_type = "LRS"
		51 | }

Check: CKV_AZURE_206: "Ensure that Storage Accounts use replication"
	FAILED for resource: azurerm_storage_account.logicapp_std_storage
	File: /terraform/logicapp/main.tf:45-51

		45 | resource "azurerm_storage_account" "logicapp_std_storage" {
		46 |   name                     = "${var.context_prefix}${random_string.unique.result}${var.environment_name}sa"
		47 |   resource_group_name      = azurerm_resource_group.rg.name
		48 |   location                 = azurerm_resource_group.rg.location
		49 |   account_tier             = "Standard"
		50 |   account_replication_type = "LRS"
		51 | }

Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.logicapp_std_storage
	File: /terraform/logicapp/main.tf:45-51
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/enable-requests-on-storage-logging-for-queue-service.html

		45 | resource "azurerm_storage_account" "logicapp_std_storage" {
		46 |   name                     = "${var.context_prefix}${random_string.unique.result}${var.environment_name}sa"
		47 |   resource_group_name      = azurerm_resource_group.rg.name
		48 |   location                 = azurerm_resource_group.rg.location
		49 |   account_tier             = "Standard"
		50 |   account_replication_type = "LRS"
		51 | }

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	FAILED for resource: azurerm_storage_account.logicapp_std_storage
	File: /terraform/logicapp/main.tf:45-51
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-storage-accounts-disallow-public-access.html

		45 | resource "azurerm_storage_account" "logicapp_std_storage" {
		46 |   name                     = "${var.context_prefix}${random_string.unique.result}${var.environment_name}sa"
		47 |   resource_group_name      = azurerm_resource_group.rg.name
		48 |   location                 = azurerm_resource_group.rg.location
		49 |   account_tier             = "Standard"
		50 |   account_replication_type = "LRS"
		51 | }

Check: CKV_AZURE_212: "Ensure App Service has a minimum number of instances for failover"
	FAILED for resource: azurerm_service_plan.platform_logicapp_plan
	File: /terraform/logicapp/main.tf:54-62

		54 | resource "azurerm_service_plan" "platform_logicapp_plan" {
		55 |   name                = "${var.context_prefix}-${random_string.unique.result}-${var.environment_name}-plan"
		56 |   location            = azurerm_resource_group.rg.location
		57 |   resource_group_name = azurerm_resource_group.rg.name
		58 |   #kind                = "elastic"
		59 |   os_type  = "Windows"
		60 |   tags     = {}
		61 |   sku_name = "WS1"
		62 | }

Check: CKV_AZURE_206: "Ensure that Storage Accounts use replication"
	FAILED for resource: azurerm_storage_account.storeacc
	File: /terraform/moved-block/main.tf:22-32

		22 | resource "azurerm_storage_account" "storeacc" {
		23 |   name                            = "simplestoragetorivar"
		24 |   resource_group_name             = azurerm_resource_group.rg.name
		25 |   location                        = "norwayeast"
		26 |   account_kind                    = "StorageV2"
		27 |   account_tier                    = "Standard"
		28 |   account_replication_type        = "LRS"
		29 |   enable_https_traffic_only       = true
		30 |   allow_nested_items_to_be_public = false
		31 |   min_tls_version                 = "TLS1_2"
		32 | }

Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.storeacc
	File: /terraform/moved-block/main.tf:22-32
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-logging-policies/enable-requests-on-storage-logging-for-queue-service.html

		22 | resource "azurerm_storage_account" "storeacc" {
		23 |   name                            = "simplestoragetorivar"
		24 |   resource_group_name             = azurerm_resource_group.rg.name
		25 |   location                        = "norwayeast"
		26 |   account_kind                    = "StorageV2"
		27 |   account_tier                    = "Standard"
		28 |   account_replication_type        = "LRS"
		29 |   enable_https_traffic_only       = true
		30 |   allow_nested_items_to_be_public = false
		31 |   min_tls_version                 = "TLS1_2"
		32 | }

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	FAILED for resource: azurerm_storage_account.storeacc
	File: /terraform/moved-block/main.tf:22-32
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-storage-accounts-disallow-public-access.html

		22 | resource "azurerm_storage_account" "storeacc" {
		23 |   name                            = "simplestoragetorivar"
		24 |   resource_group_name             = azurerm_resource_group.rg.name
		25 |   location                        = "norwayeast"
		26 |   account_kind                    = "StorageV2"
		27 |   account_tier                    = "Standard"
		28 |   account_replication_type        = "LRS"
		29 |   enable_https_traffic_only       = true
		30 |   allow_nested_items_to_be_public = false
		31 |   min_tls_version                 = "TLS1_2"
		32 | }

Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg1"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-storage-policies/bc-azr-storage-2.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_190: "Ensure that Storage blobs restrict public access"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg1"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_206: "Ensure that Storage Accounts use replication"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg1"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg1"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-storage-accounts-disallow-public-access.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg2"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-storage-policies/bc-azr-storage-2.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_190: "Ensure that Storage blobs restrict public access"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg2"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_206: "Ensure that Storage Accounts use replication"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg2"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg2"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-storage-accounts-disallow-public-access.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg3"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-storage-policies/bc-azr-storage-2.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_190: "Ensure that Storage blobs restrict public access"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg3"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_206: "Ensure that Storage Accounts use replication"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg3"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg3"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-storage-accounts-disallow-public-access.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg4"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-storage-policies/bc-azr-storage-2.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_190: "Ensure that Storage blobs restrict public access"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg4"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_206: "Ensure that Storage Accounts use replication"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg4"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg4"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-storage-accounts-disallow-public-access.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg5"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-storage-policies/bc-azr-storage-2.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_190: "Ensure that Storage blobs restrict public access"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg5"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_206: "Ensure that Storage Accounts use replication"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg5"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg5"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Calling File: /terraform/optional-testing/main.tf:26-61
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-storage-accounts-disallow-public-access.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV_AZURE_212: "Ensure App Service has a minimum number of instances for failover"
	FAILED for resource: azurerm_service_plan.plan
	File: /terraform/tf-testing/service-plan/main.tf:29-35

		29 | resource "azurerm_service_plan" "plan" {
		30 |   location            = azurerm_resource_group.rg.location
		31 |   name                = "tf-testing-${random_string.unique.result}-asp"
		32 |   os_type             = "Linux"
		33 |   resource_group_name = azurerm_resource_group.rg.name
		34 |   sku_name            = "F1"
		35 | }

Check: CKV_AZURE_211: "Ensure App Service plan suitable for production use"
	FAILED for resource: azurerm_service_plan.plan
	File: /terraform/tf-testing/service-plan/main.tf:29-35

		29 | resource "azurerm_service_plan" "plan" {
		30 |   location            = azurerm_resource_group.rg.location
		31 |   name                = "tf-testing-${random_string.unique.result}-asp"
		32 |   os_type             = "Linux"
		33 |   resource_group_name = azurerm_resource_group.rg.name
		34 |   sku_name            = "F1"
		35 | }

Check: CKV_AZURE_120: "Ensure that Application Gateway enables WAF"
	FAILED for resource: azurerm_application_gateway.network
	File: /terraform/agic/appgw.tf:19-100
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-application-gateway-enables-waf.html

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AZURE_120: "Ensure that Application Gateway enables WAF"
	FAILED for resource: azurerm_application_gateway.network
	File: /terraform/appgateway/gateway.tf:14-97
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-application-gateway-enables-waf.html

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV2_AZURE_24: "Ensure Azure automation account does NOT have overly permissive network access"
	FAILED for resource: azurerm_automation_account.aa
	File: /terraform/automationaccount/main.tf:18-23

		18 | resource "azurerm_automation_account" "aa" {
		19 |   name                = "${var.prefix}-aa"
		20 |   location            = azurerm_resource_group.rg.location
		21 |   resource_group_name = azurerm_resource_group.rg.name
		22 |   sku_name            = "Basic"
		23 | }

Check: CKV2_AZURE_31: "Ensure VNET subnet is configured with a Network Security Group (NSG)"
	FAILED for resource: azurerm_subnet.kubesubnet
	File: /terraform/agic/network.tf:9-14

		9  | resource "azurerm_subnet" "kubesubnet" {
		10 |   name                 = var.aks_subnet_name
		11 |   address_prefixes     = [var.aks_subnet_address_prefix]
		12 |   virtual_network_name = azurerm_virtual_network.test.name
		13 |   resource_group_name  = azurerm_resource_group.rg.name
		14 | }

Check: CKV2_AZURE_31: "Ensure VNET subnet is configured with a Network Security Group (NSG)"
	FAILED for resource: azurerm_subnet.appgwsubnet
	File: /terraform/agic/network.tf:16-21

		16 | resource "azurerm_subnet" "appgwsubnet" {
		17 |   name                 = "appgwsubnet"
		18 |   address_prefixes     = [var.app_gateway_subnet_address_prefix]
		19 |   virtual_network_name = azurerm_virtual_network.test.name
		20 |   resource_group_name  = azurerm_resource_group.rg.name
		21 | }

Check: CKV2_AZURE_31: "Ensure VNET subnet is configured with a Network Security Group (NSG)"
	FAILED for resource: azurerm_subnet.mgmtsubnet
	File: /terraform/agic/network.tf:23-28

		23 | resource "azurerm_subnet" "mgmtsubnet" {
		24 |   name                 = "mgmtsubnet"
		25 |   address_prefixes     = ["192.168.2.0/24"]
		26 |   virtual_network_name = azurerm_virtual_network.test.name
		27 |   resource_group_name  = azurerm_resource_group.rg.name
		28 | }

Check: CKV2_AZURE_31: "Ensure VNET subnet is configured with a Network Security Group (NSG)"
	FAILED for resource: azurerm_subnet.example[0]
	File: /terraform/appgateway/network.tf:20-26

		20 | resource "azurerm_subnet" "example" {
		21 |   count                = length(keys(local.subnets))
		22 |   name                 = keys(local.subnets)[count.index]
		23 |   resource_group_name  = azurerm_resource_group.example.name
		24 |   virtual_network_name = azurerm_virtual_network.example.name
		25 |   address_prefixes     = [local.subnets[keys(local.subnets)[count.index]]]
		26 | }

Check: CKV2_AZURE_31: "Ensure VNET subnet is configured with a Network Security Group (NSG)"
	FAILED for resource: module.functionapp-dev.azurerm_subnet.integration-subnet
	File: /terraform/functionapp/modules/app/network.tf:9-15

		9  | resource "azurerm_subnet" "integration-subnet" {
		10 |   count                = var.vnet_integration_enabled == true && var.vnet_integration_subnet_id == null ? 1 : 0
		11 |   address_prefixes     = ["10.0.0.0/25"]
		12 |   name                 = "integrationSubnet"
		13 |   resource_group_name  = azurerm_resource_group.rg.name
		14 |   virtual_network_name = azurerm_virtual_network.integration-vnet[0].name
		15 | }

Check: CKV2_AZURE_31: "Ensure VNET subnet is configured with a Network Security Group (NSG)"
	FAILED for resource: module.functionapp-test.azurerm_subnet.integration-subnet
	File: /terraform/functionapp/modules/app/network.tf:9-15

		9  | resource "azurerm_subnet" "integration-subnet" {
		10 |   count                = var.vnet_integration_enabled == true && var.vnet_integration_subnet_id == null ? 1 : 0
		11 |   address_prefixes     = ["10.0.0.0/25"]
		12 |   name                 = "integrationSubnet"
		13 |   resource_group_name  = azurerm_resource_group.rg.name
		14 |   virtual_network_name = azurerm_virtual_network.integration-vnet[0].name
		15 | }

Check: CKV2_AZURE_31: "Ensure VNET subnet is configured with a Network Security Group (NSG)"
	FAILED for resource: azurerm_subnet.subnet1
	File: /terraform/insecure/vm/main.tf:17-22

		17 | resource "azurerm_subnet" "subnet1" {
		18 |   name                 = "subnet1"
		19 |   resource_group_name  = azurerm_resource_group.rg.name
		20 |   virtual_network_name = azurerm_virtual_network.vnet.name
		21 |   address_prefixes     = ["10.0.0.0/24"]
		22 | }

Check: CKV2_AZURE_31: "Ensure VNET subnet is configured with a Network Security Group (NSG)"
	FAILED for resource: azurerm_subnet.subnet1
	File: /terraform/tf-testing/service-plan/main.tf:44-49

		44 | resource "azurerm_subnet" "subnet1" {
		45 |   address_prefixes     = ["10.0.0.0/24"]
		46 |   name                 = "subnet1"
		47 |   resource_group_name  = azurerm_resource_group.rg.name
		48 |   virtual_network_name = azurerm_virtual_network.vnet.name
		49 | }

Check: CKV2_AZURE_31: "Ensure VNET subnet is configured with a Network Security Group (NSG)"
	FAILED for resource: azurerm_subnet.subnet1
	File: /terraform/vnet-testing/main.tf:15-24

		15 | resource "azurerm_subnet" "subnet1" {
		16 |   address_prefixes     = ["10.0.0.0/24"]
		17 |   name                 = "subnet1"
		18 |   resource_group_name  = azurerm_resource_group.rg.name
		19 |   virtual_network_name = azurerm_virtual_network.vnet.name
		20 | 
		21 |   enforce_private_link_endpoint_network_policies = true
		22 |   enforce_private_link_service_network_policies  = false
		23 | 
		24 | }

Check: CKV2_AZURE_31: "Ensure VNET subnet is configured with a Network Security Group (NSG)"
	FAILED for resource: azurerm_subnet.subnet2
	File: /terraform/vnet-testing/main.tf:26-35

		26 | resource "azurerm_subnet" "subnet2" {
		27 |   address_prefixes     = ["10.0.1.0/24"]
		28 |   name                 = "subnet2"
		29 |   resource_group_name  = azurerm_resource_group.rg.name
		30 |   virtual_network_name = azurerm_virtual_network.vnet.name
		31 | 
		32 |   private_endpoint_network_policies_enabled     = false
		33 |   private_link_service_network_policies_enabled = true
		34 | 
		35 | }

Check: CKV_AZURE_119: "Ensure that Network Interfaces don't use public IPs"
	FAILED for resource: azurerm_network_interface.jumpbox
	File: /terraform/agic/jumpbox.tf:28-40
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-network-interfaces-dont-use-public-ips.html

		28 | resource "azurerm_network_interface" "jumpbox" {
		29 |   name                = "jumpbox-nic"
		30 |   location            = azurerm_resource_group.rg.location
		31 |   resource_group_name = azurerm_resource_group.rg.name
		32 | 
		33 | 
		34 |   ip_configuration {
		35 |     name                          = "internal"
		36 |     subnet_id                     = resource.azurerm_subnet.mgmtsubnet.id
		37 |     private_ip_address_allocation = "Dynamic"
		38 |     public_ip_address_id          = azurerm_public_ip.pip.id
		39 |   }
		40 | }

Check: CKV_AZURE_119: "Ensure that Network Interfaces don't use public IPs"
	FAILED for resource: azurerm_network_interface.vm1_nic
	File: /terraform/insecure/vm/main.tf:24-35
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/ensure-that-network-interfaces-dont-use-public-ips.html

		24 | resource "azurerm_network_interface" "vm1_nic" {
		25 |   name                = "tf-insecure-vm1-nic1"
		26 |   location            = azurerm_resource_group.rg.location
		27 |   resource_group_name = azurerm_resource_group.rg.name
		28 | 
		29 |   ip_configuration {
		30 |     name                          = "internal"
		31 |     subnet_id                     = azurerm_subnet.subnet1.id
		32 |     private_ip_address_allocation = "Dynamic"
		33 |     public_ip_address_id          = azurerm_public_ip.pip.id
		34 |   }
		35 | }

Check: CKV2_AZURE_33: "Ensure storage account is configured with private endpoint"
	FAILED for resource: module.functionapp-dev.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV2_AZURE_33: "Ensure storage account is configured with private endpoint"
	FAILED for resource: module.functionapp-test.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV2_AZURE_33: "Ensure storage account is configured with private endpoint"
	FAILED for resource: azurerm_storage_account.logicapp_std_storage
	File: /terraform/logicapp/main.tf:45-51

		45 | resource "azurerm_storage_account" "logicapp_std_storage" {
		46 |   name                     = "${var.context_prefix}${random_string.unique.result}${var.environment_name}sa"
		47 |   resource_group_name      = azurerm_resource_group.rg.name
		48 |   location                 = azurerm_resource_group.rg.location
		49 |   account_tier             = "Standard"
		50 |   account_replication_type = "LRS"
		51 | }

Check: CKV2_AZURE_33: "Ensure storage account is configured with private endpoint"
	FAILED for resource: azurerm_storage_account.storeacc
	File: /terraform/moved-block/main.tf:22-32

		22 | resource "azurerm_storage_account" "storeacc" {
		23 |   name                            = "simplestoragetorivar"
		24 |   resource_group_name             = azurerm_resource_group.rg.name
		25 |   location                        = "norwayeast"
		26 |   account_kind                    = "StorageV2"
		27 |   account_tier                    = "Standard"
		28 |   account_replication_type        = "LRS"
		29 |   enable_https_traffic_only       = true
		30 |   allow_nested_items_to_be_public = false
		31 |   min_tls_version                 = "TLS1_2"
		32 | }

Check: CKV2_AZURE_33: "Ensure storage account is configured with private endpoint"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg1"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_33: "Ensure storage account is configured with private endpoint"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg2"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_33: "Ensure storage account is configured with private endpoint"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg3"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_33: "Ensure storage account is configured with private endpoint"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg4"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_33: "Ensure storage account is configured with private endpoint"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg5"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: module.functionapp-dev.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key.html

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: module.functionapp-test.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key.html

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: azurerm_storage_account.logicapp_std_storage
	File: /terraform/logicapp/main.tf:45-51
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key.html

		45 | resource "azurerm_storage_account" "logicapp_std_storage" {
		46 |   name                     = "${var.context_prefix}${random_string.unique.result}${var.environment_name}sa"
		47 |   resource_group_name      = azurerm_resource_group.rg.name
		48 |   location                 = azurerm_resource_group.rg.location
		49 |   account_tier             = "Standard"
		50 |   account_replication_type = "LRS"
		51 | }

Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: azurerm_storage_account.storeacc
	File: /terraform/moved-block/main.tf:22-32
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key.html

		22 | resource "azurerm_storage_account" "storeacc" {
		23 |   name                            = "simplestoragetorivar"
		24 |   resource_group_name             = azurerm_resource_group.rg.name
		25 |   location                        = "norwayeast"
		26 |   account_kind                    = "StorageV2"
		27 |   account_tier                    = "Standard"
		28 |   account_replication_type        = "LRS"
		29 |   enable_https_traffic_only       = true
		30 |   allow_nested_items_to_be_public = false
		31 |   min_tls_version                 = "TLS1_2"
		32 | }

Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg1"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg2"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg3"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg4"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg5"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-general-policies/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key.html

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_36: "Ensure Azure automation account is configured with managed identity"
	FAILED for resource: azurerm_automation_account.aa
	File: /terraform/automationaccount/main.tf:18-23

		18 | resource "azurerm_automation_account" "aa" {
		19 |   name                = "${var.prefix}-aa"
		20 |   location            = azurerm_resource_group.rg.location
		21 |   resource_group_name = azurerm_resource_group.rg.name
		22 |   sku_name            = "Basic"
		23 | }

Check: CKV2_AZURE_38: "Ensure soft-delete is enabled on Azure storage account"
	FAILED for resource: module.functionapp-dev.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV2_AZURE_38: "Ensure soft-delete is enabled on Azure storage account"
	FAILED for resource: module.functionapp-test.azurerm_storage_account.sa
	File: /terraform/functionapp/modules/app/storage.tf:5-20

		5  | resource "azurerm_storage_account" "sa" {
		6  |   name                      = "${local.name_prefix}${random_string.unique.result}sa"
		7  |   location                  = azurerm_resource_group.rg.location
		8  |   account_replication_type  = "LRS"
		9  |   account_tier              = "Standard"
		10 |   account_kind              = "StorageV2"
		11 |   min_tls_version           = "TLS1_2"
		12 |   enable_https_traffic_only = true
		13 |   resource_group_name       = azurerm_resource_group.rg.name
		14 | 
		15 |   network_rules {
		16 |     default_action             = var.vnet_integration_enabled == false ? "Allow" : "Deny"
		17 |     bypass                     = ["AzureServices"]
		18 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		19 |   }
		20 | }

Check: CKV2_AZURE_38: "Ensure soft-delete is enabled on Azure storage account"
	FAILED for resource: azurerm_storage_account.logicapp_std_storage
	File: /terraform/logicapp/main.tf:45-51

		45 | resource "azurerm_storage_account" "logicapp_std_storage" {
		46 |   name                     = "${var.context_prefix}${random_string.unique.result}${var.environment_name}sa"
		47 |   resource_group_name      = azurerm_resource_group.rg.name
		48 |   location                 = azurerm_resource_group.rg.location
		49 |   account_tier             = "Standard"
		50 |   account_replication_type = "LRS"
		51 | }

Check: CKV2_AZURE_38: "Ensure soft-delete is enabled on Azure storage account"
	FAILED for resource: azurerm_storage_account.storeacc
	File: /terraform/moved-block/main.tf:22-32

		22 | resource "azurerm_storage_account" "storeacc" {
		23 |   name                            = "simplestoragetorivar"
		24 |   resource_group_name             = azurerm_resource_group.rg.name
		25 |   location                        = "norwayeast"
		26 |   account_kind                    = "StorageV2"
		27 |   account_tier                    = "Standard"
		28 |   account_replication_type        = "LRS"
		29 |   enable_https_traffic_only       = true
		30 |   allow_nested_items_to_be_public = false
		31 |   min_tls_version                 = "TLS1_2"
		32 | }

Check: CKV2_AZURE_38: "Ensure soft-delete is enabled on Azure storage account"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg1"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_38: "Ensure soft-delete is enabled on Azure storage account"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg2"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_38: "Ensure soft-delete is enabled on Azure storage account"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg3"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_38: "Ensure soft-delete is enabled on Azure storage account"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg4"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_38: "Ensure soft-delete is enabled on Azure storage account"
	FAILED for resource: module.storage_account.module.storage_accounts.azurerm_storage_account.storeacc["stg5"]
	File: /terraform/optional-testing/modules/storage/main.tf:48-59

		48 | resource "azurerm_storage_account" "storeacc" {
		49 |   for_each                        = var.input
		50 |   name                            = each.value.name
		51 |   resource_group_name             = each.value.resource_group_name != null ? each.value.resource_group_name : local.default_resource_group_name
		52 |   location                        = each.value.location != null ? each.value.location : local.default_location
		53 |   account_kind                    = each.value.account_kind != null ? each.value.account_kind : local.default_account_kind
		54 |   account_tier                    = each.value.account_tier != null ? each.value.account_tier : local.default_account_tier
		55 |   account_replication_type        = each.value.account_replication_type != null ? each.value.account_replication_type : local.default_account_replication_type
		56 |   enable_https_traffic_only       = each.value.enable_https_traffic_only != null ? each.value.enable_https_traffic_only : local.default_enable_https_traffic_only
		57 |   allow_nested_items_to_be_public = each.value.allow_nested_items_to_be_public != null ? each.value.allow_nested_items_to_be_public : local.default_allow_nested_items_to_be_public
		58 |   min_tls_version                 = each.value.min_tls_version != null ? each.value.min_tls_version : local.default_min_tls_version
		59 | }

Check: CKV2_AZURE_32: "Ensure private endpoint is configured to key vault"
	FAILED for resource: module.functionapp-dev.azurerm_key_vault.kv
	File: /terraform/functionapp/modules/app/key_vault.tf:1-17

		1  | resource "azurerm_key_vault" "kv" {
		2  |   location                   = azurerm_resource_group.rg.location
		3  |   name                       = "${local.resource_prefix}-kv"
		4  |   resource_group_name        = azurerm_resource_group.rg.name
		5  |   sku_name                   = "standard"
		6  |   tenant_id                  = data.azurerm_client_config.current.tenant_id
		7  |   enable_rbac_authorization  = true
		8  |   soft_delete_retention_days = 90
		9  | 
		10 |   network_acls {
		11 |     bypass                     = "AzureServices"
		12 |     default_action             = "Deny"
		13 |     ip_rules                   = azurerm_windows_function_app.app.outbound_ip_address_list
		14 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		15 |   }
		16 | 
		17 | }

Check: CKV2_AZURE_32: "Ensure private endpoint is configured to key vault"
	FAILED for resource: module.functionapp-test.azurerm_key_vault.kv
	File: /terraform/functionapp/modules/app/key_vault.tf:1-17

		1  | resource "azurerm_key_vault" "kv" {
		2  |   location                   = azurerm_resource_group.rg.location
		3  |   name                       = "${local.resource_prefix}-kv"
		4  |   resource_group_name        = azurerm_resource_group.rg.name
		5  |   sku_name                   = "standard"
		6  |   tenant_id                  = data.azurerm_client_config.current.tenant_id
		7  |   enable_rbac_authorization  = true
		8  |   soft_delete_retention_days = 90
		9  | 
		10 |   network_acls {
		11 |     bypass                     = "AzureServices"
		12 |     default_action             = "Deny"
		13 |     ip_rules                   = azurerm_windows_function_app.app.outbound_ip_address_list
		14 |     virtual_network_subnet_ids = var.vnet_integration_enabled == false ? [] : [local.virtual_network_subnet_id]
		15 |   }
		16 | 
		17 | }

Check: CKV2_AZURE_32: "Ensure private endpoint is configured to key vault"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform/insecure/keyvault/main.tf:19-46

		19 | resource "azurerm_key_vault" "example" {
		20 |   name                        = "examplekeyvault"
		21 |   location                    = azurerm_resource_group.rg.location
		22 |   resource_group_name         = azurerm_resource_group.rg.name
		23 |   enabled_for_disk_encryption = true
		24 |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		25 |   soft_delete_retention_days  = 7
		26 |   purge_protection_enabled    = false
		27 | 
		28 |   sku_name = "standard"
		29 | 
		30 |   access_policy {
		31 |     tenant_id = data.azurerm_client_config.current.tenant_id
		32 |     object_id = data.azurerm_client_config.current.object_id
		33 | 
		34 |     key_permissions = [
		35 |       "Get",
		36 |     ]
		37 | 
		38 |     secret_permissions = [
		39 |       "Get",
		40 |     ]
		41 | 
		42 |     storage_permissions = [
		43 |       "Get",
		44 |     ]
		45 |   }
		46 | }

kubernetes scan results:

Passed checks: 147, Failed checks: 35, Skipped checks: 0

Check: CKV_K8S_23: "Minimize the admission of root containers"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-22.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_30: "Apply security context to your containers"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-28.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_31: "Ensure that the seccomp profile is set to docker/default or runtime/default"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-29.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_28: "Minimize the admission of containers with the NET_RAW capability"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-27.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_22: "Use read-only filesystem for containers where possible"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-21.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_20: "Containers should not run with allowPrivilegeEscalation"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-19.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_40: "Containers should run as a high UID to avoid host conflict"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-37.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_21: "The default namespace should not be used"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-20.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_29: "Apply security context to your pods and containers"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-securitycontext-is-applied-to-pods-and-containers.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_15: "Image Pull Policy should be Always"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-14.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_37: "Minimize the admission of containers with capabilities assigned"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-34.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_8: "Liveness Probe Should be Configured"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-7.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_9: "Readiness Probe Should be Configured"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-8.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_38: "Ensure that Service Account Tokens are only mounted where necessary"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-35.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_43: "Image should use digest"
	FAILED for resource: Deployment.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-39.html

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV_K8S_21: "The default namespace should not be used"
	FAILED for resource: Service.default.azure-vote-back
	File: /terraform/agic/deployment.yaml:34-43
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-20.html

		34 | apiVersion: v1
		35 | kind: Service
		36 | metadata:
		37 |   name: azure-vote-back
		38 | spec:
		39 |   ports:
		40 |   - port: 6379
		41 |   selector:
		42 |     app: azure-vote-back
		43 | ---

Check: CKV_K8S_23: "Minimize the admission of root containers"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-22.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_30: "Apply security context to your containers"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-28.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_31: "Ensure that the seccomp profile is set to docker/default or runtime/default"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-29.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_28: "Minimize the admission of containers with the NET_RAW capability"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-27.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_22: "Use read-only filesystem for containers where possible"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-21.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_20: "Containers should not run with allowPrivilegeEscalation"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-19.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_40: "Containers should run as a high UID to avoid host conflict"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-37.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_21: "The default namespace should not be used"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-20.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_29: "Apply security context to your pods and containers"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-securitycontext-is-applied-to-pods-and-containers.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_15: "Image Pull Policy should be Always"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-14.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_37: "Minimize the admission of containers with capabilities assigned"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-34.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_8: "Liveness Probe Should be Configured"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-7.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_9: "Readiness Probe Should be Configured"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-8.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_38: "Ensure that Service Account Tokens are only mounted where necessary"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-35.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_43: "Image should use digest"
	FAILED for resource: Deployment.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-39.html

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

Check: CKV_K8S_21: "The default namespace should not be used"
	FAILED for resource: Service.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:76-86
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-20.html

		76 | apiVersion: v1
		77 | kind: Service
		78 | metadata:
		79 |   name: azure-vote-front
		80 | spec:
		81 |   type: LoadBalancer
		82 |   ports:
		83 |   - port: 80
		84 |   selector:
		85 |     app: azure-vote-front
		86 | ---

Check: CKV_K8S_21: "The default namespace should not be used"
	FAILED for resource: Ingress.default.azure-vote-front
	File: /terraform/agic/deployment.yaml:87-103
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-20.html

		87  | apiVersion: networking.k8s.io/v1
		88  | kind: Ingress
		89  | metadata:
		90  |   name: azure-vote-front
		91  |   annotations:
		92  |     kubernetes.io/ingress.class: azure/application-gateway
		93  | spec:
		94  |   rules:
		95  |     - http:
		96  |         paths:
		97  |           - path: /
		98  |             pathType: Prefix
		99  |             backend:
		100 |               service:
		101 |                 name: azure-vote-front
		102 |                 port: 
		103 |                   number: 80

Check: CKV2_K8S_6: "Minimize the admission of pods which lack an associated NetworkPolicy"
	FAILED for resource: Pod.default.azure-vote-back.app-azure-vote-back
	File: /terraform/agic/deployment.yaml:1-33

		1  | apiVersion: apps/v1
		2  | kind: Deployment
		3  | metadata:
		4  |   name: azure-vote-back
		5  | spec:
		6  |   replicas: 1
		7  |   selector:
		8  |     matchLabels:
		9  |       app: azure-vote-back
		10 |   template:
		11 |     metadata:
		12 |       labels:
		13 |         app: azure-vote-back
		14 |     spec:
		15 |       nodeSelector:
		16 |         "kubernetes.io/os": linux
		17 |       containers:
		18 |       - name: azure-vote-back
		19 |         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
		20 |         env:
		21 |         - name: ALLOW_EMPTY_PASSWORD
		22 |           value: "yes"
		23 |         resources:
		24 |           requests:
		25 |             cpu: 100m
		26 |             memory: 128Mi
		27 |           limits:
		28 |             cpu: 250m
		29 |             memory: 256Mi
		30 |         ports:
		31 |         - containerPort: 6379
		32 |           name: redis
		33 | ---

Check: CKV2_K8S_6: "Minimize the admission of pods which lack an associated NetworkPolicy"
	FAILED for resource: Pod.default.azure-vote-front.app-azure-vote-front
	File: /terraform/agic/deployment.yaml:44-75

		44 | apiVersion: apps/v1
		45 | kind: Deployment
		46 | metadata:
		47 |   name: azure-vote-front
		48 | spec:
		49 |   replicas: 1
		50 |   selector:
		51 |     matchLabels:
		52 |       app: azure-vote-front
		53 |   template:
		54 |     metadata:
		55 |       labels:
		56 |         app: azure-vote-front
		57 |     spec:
		58 |       nodeSelector:
		59 |         "kubernetes.io/os": linux
		60 |       containers:
		61 |       - name: azure-vote-front
		62 |         image: mcr.microsoft.com/azuredocs/azure-vote-front:v1
		63 |         resources:
		64 |           requests:
		65 |             cpu: 100m
		66 |             memory: 128Mi
		67 |           limits:
		68 |             cpu: 250m
		69 |             memory: 256Mi
		70 |         ports:
		71 |         - containerPort: 80
		72 |         env:
		73 |         - name: REDIS
		74 |           value: "azure-vote-back"
		75 | ---

arm scan results:

Passed checks: 12, Failed checks: 8, Skipped checks: 0

Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: Microsoft.Storage/storageAccounts.[concat('diag', uniquestring(resourceGroup().id))]
	File: /torivar.com/resources/vmtemplate/azuredeploy.json:152-162
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/set-default-network-access-rule-for-storage-accounts-to-deny.html

		152 |         {
		153 |             "type": "Microsoft.Storage/storageAccounts",
		154 |             "apiVersion": "2018-11-01",
		155 |             "name": "[variables('storageAccountName')]",
		156 |             "location": "[parameters('location')]",
		157 |             "sku": {
		158 |                 "name": "Standard_LRS"
		159 |             },
		160 |             "kind": "Storage",
		161 |             "properties": {}
		162 |         },

Check: CKV_AZURE_3: "Ensure that 'supportsHttpsTrafficOnly' is set to 'true'"
	FAILED for resource: Microsoft.Storage/storageAccounts.[concat('diag', uniquestring(resourceGroup().id))]
	File: /torivar.com/resources/vmtemplate/azuredeploy.json:152-162

		152 |         {
		153 |             "type": "Microsoft.Storage/storageAccounts",
		154 |             "apiVersion": "2018-11-01",
		155 |             "name": "[variables('storageAccountName')]",
		156 |             "location": "[parameters('location')]",
		157 |             "sku": {
		158 |                 "name": "Standard_LRS"
		159 |             },
		160 |             "kind": "Storage",
		161 |             "properties": {}
		162 |         },

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	FAILED for resource: Microsoft.Storage/storageAccounts.[concat('diag', uniquestring(resourceGroup().id))]
	File: /torivar.com/resources/vmtemplate/azuredeploy.json:152-162
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/enable-trusted-microsoft-services-for-storage-account-access.html

		152 |         {
		153 |             "type": "Microsoft.Storage/storageAccounts",
		154 |             "apiVersion": "2018-11-01",
		155 |             "name": "[variables('storageAccountName')]",
		156 |             "location": "[parameters('location')]",
		157 |             "sku": {
		158 |                 "name": "Standard_LRS"
		159 |             },
		160 |             "kind": "Storage",
		161 |             "properties": {}
		162 |         },

Check: CKV_AZURE_1: "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)"
	FAILED for resource: Microsoft.Compute/virtualMachines.[concat(parameters('prefix'), '-', parameters('vmName'))]
	File: /torivar.com/resources/vmtemplate/azuredeploy.json:290-342
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-1.html

		Code lines for this resource are too many. Please use IDE of your choice to review the file.
Check: CKV_AZURE_17: "Ensure the web app has 'Client Certificates (Incoming client certificates)' set"
	FAILED for resource: Microsoft.Web/sites.[concat(uniqueString(concat(resourceGroup().id, subscription().id)), '-example-app')]
	File: /template.json:105-142
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-7.html

		105 |         {
		106 |             "apiVersion": "2020-06-01",
		107 |             "name": "[variables('webAppName')]",
		108 |             "type": "Microsoft.Web/sites",
		109 |             "location": "[parameters('location')]",
		110 |             "identity": {
		111 |                 "type": "SystemAssigned"
		112 |             },
		113 |             "tags": {
		114 |                 "CostCenter": "[parameters('costCenterTagValue')]",
		115 |                 "Environment": "[parameters('environment')]",
		116 |                 "IaC": "[concat('IaC-Release-',parameters('release'))]"
		117 |             },
		118 |             "dependsOn": [
		119 |                 "[resourceId('microsoft.insights/components/', variables('appInsightsName'))]",
		120 |                 "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
		121 |             ],
		122 |             "properties": {
		123 |                 "name": "[variables('webAppName')]",
		124 |                 "siteConfig": {
		125 |                     "appSettings": "[union(parameters('customAppSettings'),createArray(json(concat('{\"name\": \"APPINSIGHTS_INSTRUMENTATIONKEY\", \"value\": \"',reference(resourceId('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey,'\"}')),json(concat('{\"name\": \"APPLICATIONINSIGHTS_CONNECTION_STRING\", \"value\": \"',reference(resourceId('microsoft.insights/components/', variables('appInsightsName'))).ConnectionString,'\"}')),json(concat('{\"name\": \"ApplicationInsightsAgent_EXTENSION_VERSION\", \"value\": \"~2\"}')),json(concat('{\"name\": \"XDT_MicrosoftApplicationInsights_Mode\", \"value\": \"recommended\"}')),json(concat('{\"name\": \"InstrumentationEngine_EXTENSION_VERSION\", \"value\": \"~1\"}')),json(concat('{\"name\": \"XDT_MicrosoftApplicationInsights_BaseExtensions\", \"value\": \"~1\"}'))))]",
		126 |                     "metadata": [
		127 |                         {
		128 |                             "name": "CURRENT_STACK",
		129 |                             "value": "[parameters('currentStack')]"
		130 |                         }
		131 |                     ],
		132 |                     "netFrameworkVersion": "[parameters('netFrameworkVersion')]",
		133 |                     "phpVersion": "[parameters('phpVersion')]",
		134 |                     "alwaysOn": "[variables('alwaysOn')]",
		135 |                     "minTlsVersion": "1.2"
		136 |                 },
		137 |                 "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
		138 |                 "hostingEnvironment": "[parameters('hostingEnvironment')]",
		139 |                 "clientAffinityEnabled": true,
		140 |                 "httpsOnly": true
		141 |             }
		142 |         },

Check: CKV_AZURE_18: "Ensure that 'HTTP Version' is the latest if used to run the web app"
	FAILED for resource: Microsoft.Web/sites.[concat(uniqueString(concat(resourceGroup().id, subscription().id)), '-example-app')]
	File: /template.json:105-142
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/bc-azr-networking-8.html

		105 |         {
		106 |             "apiVersion": "2020-06-01",
		107 |             "name": "[variables('webAppName')]",
		108 |             "type": "Microsoft.Web/sites",
		109 |             "location": "[parameters('location')]",
		110 |             "identity": {
		111 |                 "type": "SystemAssigned"
		112 |             },
		113 |             "tags": {
		114 |                 "CostCenter": "[parameters('costCenterTagValue')]",
		115 |                 "Environment": "[parameters('environment')]",
		116 |                 "IaC": "[concat('IaC-Release-',parameters('release'))]"
		117 |             },
		118 |             "dependsOn": [
		119 |                 "[resourceId('microsoft.insights/components/', variables('appInsightsName'))]",
		120 |                 "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
		121 |             ],
		122 |             "properties": {
		123 |                 "name": "[variables('webAppName')]",
		124 |                 "siteConfig": {
		125 |                     "appSettings": "[union(parameters('customAppSettings'),createArray(json(concat('{\"name\": \"APPINSIGHTS_INSTRUMENTATIONKEY\", \"value\": \"',reference(resourceId('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey,'\"}')),json(concat('{\"name\": \"APPLICATIONINSIGHTS_CONNECTION_STRING\", \"value\": \"',reference(resourceId('microsoft.insights/components/', variables('appInsightsName'))).ConnectionString,'\"}')),json(concat('{\"name\": \"ApplicationInsightsAgent_EXTENSION_VERSION\", \"value\": \"~2\"}')),json(concat('{\"name\": \"XDT_MicrosoftApplicationInsights_Mode\", \"value\": \"recommended\"}')),json(concat('{\"name\": \"InstrumentationEngine_EXTENSION_VERSION\", \"value\": \"~1\"}')),json(concat('{\"name\": \"XDT_MicrosoftApplicationInsights_BaseExtensions\", \"value\": \"~1\"}'))))]",
		126 |                     "metadata": [
		127 |                         {
		128 |                             "name": "CURRENT_STACK",
		129 |                             "value": "[parameters('currentStack')]"
		130 |                         }
		131 |                     ],
		132 |                     "netFrameworkVersion": "[parameters('netFrameworkVersion')]",
		133 |                     "phpVersion": "[parameters('phpVersion')]",
		134 |                     "alwaysOn": "[variables('alwaysOn')]",
		135 |                     "minTlsVersion": "1.2"
		136 |                 },
		137 |                 "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
		138 |                 "hostingEnvironment": "[parameters('hostingEnvironment')]",
		139 |                 "clientAffinityEnabled": true,
		140 |                 "httpsOnly": true
		141 |             }
		142 |         },

Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: Microsoft.Storage/storageAccounts.[concat(parameters('storagePrefix'), uniqueString(subscription().id, parameters('rgName')))]
	File: /deploy.json:46-55
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/set-default-network-access-rule-for-storage-accounts-to-deny.html

		46 |             {
		47 |               "type": "Microsoft.Storage/storageAccounts",
		48 |               "apiVersion": "2021-04-01",
		49 |               "name": "[variables('storageName')]",
		50 |               "location": "[parameters('rgLocation')]",
		51 |               "sku": {
		52 |                 "name": "Standard_LRS"
		53 |               },
		54 |               "kind": "StorageV2"
		55 |             }

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	FAILED for resource: Microsoft.Storage/storageAccounts.[concat(parameters('storagePrefix'), uniqueString(subscription().id, parameters('rgName')))]
	File: /deploy.json:46-55
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/azure-policies/azure-networking-policies/enable-trusted-microsoft-services-for-storage-account-access.html

		46 |             {
		47 |               "type": "Microsoft.Storage/storageAccounts",
		48 |               "apiVersion": "2021-04-01",
		49 |               "name": "[variables('storageName')]",
		50 |               "location": "[parameters('rgLocation')]",
		51 |               "sku": {
		52 |                 "name": "Standard_LRS"
		53 |               },
		54 |               "kind": "StorageV2"
		55 |             }

secrets scan results:

Passed checks: 0, Failed checks: 1, Skipped checks: 0

Check: CKV_SECRET_6: "Base64 High Entropy String"
	FAILED for resource: 18882f2ed5b844431259bb5cd75cea88b80365e2
	File: /terraform/insecure/keyvault/main.tf:6-7
	Guide: https://docs.paloaltonetworks.com/content/techdocs/en_US/prisma/prisma-cloud/prisma-cloud-code-security-policy-reference/secrets-policies/secrets-policy-index/git-secrets-6.html

		6 |   client_secret   = "insecu*********************"

github_actions scan results:

Passed checks: 181, Failed checks: 7, Skipped checks: 0

Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(Run Megalinter on Terraform)
	File: /.github/workflows/megalinter-terraform.yml:21-22
Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(Terraform plan and apply)
	File: /.github/workflows/caller.yml:0-1
Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(Run KICS Terraform scan)
	File: /.github/workflows/kics.yaml:0-1
Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(MSDO windows-latest)
	File: /.github/workflows/msdevopssec.yml:0-1
Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on((Prod) TF Apply)
	File: /.github/workflows/calling.yml:35-36
Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(Run checkov Terraform scan)
	File: /.github/workflows/checkov.yaml:0-1
Check: CKV2_GHA_1: "Ensure top-level permissions are not set to write-all"
	FAILED for resource: on(MegaLinter)
	File: /.github/workflows/mega-linter.yml:26-27


::endgroup::
[GitHub Status Reporter] Error posting Status for YAMLwith yamllint: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [YAML] files with [yamllint] successfully - (0.39s)[0m (expand for details)
- Using [yamllint v1.32.0] https://megalinter.io/7.3.0/descriptors/yaml_yamllint
- MegaLinter key: [YAML_YAMLLINT]
- Rules config: [.yamllint.yml]
- Number of files analyzed: [1]
::endgroup::
[GitHub Status Reporter] Error posting Status for REPOSITORYwith git_diff: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[32m✅ Linted [REPOSITORY] files with [git_diff] successfully - (0.01s)[0m (expand for details)
- Using [git_diff v2.38.5] https://megalinter.io/7.3.0/descriptors/repository_git_diff
- MegaLinter key: [REPOSITORY_GIT_DIFF]
- Rules config: identified by [git_diff]
::endgroup::
[GitHub Status Reporter] Error posting Status for TERRAFORMwith terrascan: 403
GitHub API response: {"message":"Resource not accessible by integration","documentation_url":"https://docs.github.com/rest/commits/statuses#create-a-commit-status"}
::group::[33m✅ Linted [TERRAFORM] files with [terrascan]: Found 1 non blocking error(s) - (7.0s)[0m (expand for details)
- Using [terrascan v1.18.2] https://megalinter.io/7.3.0/descriptors/terraform_terrascan
- MegaLinter key: [TERRAFORM_TERRASCAN]
- Rules config: identified by [terrascan]
[Pre][TERRAFORM_TERRASCAN] run: [terrascan] in cwd [/github/workspace]
[Pre][TERRAFORM_TERRASCAN] result:
Terrascan

Detect compliance and security violations across Infrastructure as Code to mitigate risk before provisioning cloud native infrastructure.
For more information, please visit https://runterrascan.io/

Usage:
  terrascan [command]

Available Commands:
  completion  Generate the autocompletion script for the specified shell
  help        Help about any command
  init        Initializes Terrascan and clones policies from the Terrascan GitHub repository.
  scan        Detect compliance and security violations across Infrastructure as Code.
  server      Run Terrascan as an API server
  version     Terrascan version

Flags:
  -c, --config-path string      config file path
  -h, --help                    help for terrascan
  -l, --log-level string        log level (debug, info, warn, error, panic, fatal) (default "info")
      --log-output-dir string   directory path to write the log and output files
  -x, --log-type string         log output type (console, json) (default "console")
  -o, --output string           output type (human, json, yaml, xml, junit-xml, sarif, github-sarif) (default "human")
      --temp-dir string         temporary directory path to download remote repository,module and templates

Use "terrascan [command] --help" for more information about a command.

--Error detail:
2023/08/25 13:24:24 [DEBUG] GET https://registry.terraform.io/v1/providers/hashicorp/random/versions
2023-08-25T13:24:25.090Z	[33mwarn[0m	commons/terraform-provider.go:161	failed to parse provider version: invalid sequence "=" at start of specification
2023-08-25T13:24:25.091Z	[33mwarn[0m	commons/terraform-provider.go:161	failed to parse provider version: invalid sequence "=" at start of specification
2023-08-25T13:24:25.091Z	[33mwarn[0m	commons/terraform-provider.go:161	failed to parse provider version: invalid sequence "=" at start of specification
2023-08-25T13:24:25.091Z	[33mwarn[0m	commons/terraform-provider.go:161	failed to parse provider version: invalid sequence "=" at start of specification
2023-08-25T13:24:25.091Z	[33mwarn[0m	commons/terraform-provider.go:161	failed to parse provider version: invalid sequence "=" at start of specification
2023-08-25T13:24:25.091Z	[33mwarn[0m	commons/terraform-provider.go:161	failed to parse provider version: invalid sequence "=" at start of specification
2023-08-25T13:24:25.092Z	[33mwarn[0m	commons/terraform-provider.go:161	failed to parse provider version: invalid sequence "=" at start of specification
2023-08-25T13:24:25.092Z	[33mwarn[0m	commons/terraform-provider.go:161	failed to parse provider version: invalid sequence "=" at start of specification
2023-08-25T13:24:25.092Z	[33mwarn[0m	commons/terraform-provider.go:161	failed to parse provider version: invalid sequence "=" at start of specification
2023/08/25 13:24:25 [DEBUG] GET https://registry.terraform.io/v1/providers/hashicorp/azurerm/versions
2023/08/25 13:24:25 [DEBUG] GET https://registry.terraform.io/v1/providers/azure/azapi/versions
2023-08-25T13:24:25.204Z	[31merror[0m	utils/dir.go:64	directory /github/workspace/terraform/functionapp/modules/app/examples/modules/app does not exist.
2023-08-25T13:24:25.214Z	[33mwarn[0m	commons/load-dir.go:170	failed to build unified config. errors:
<nil>: Failed to read module directory; Module directory /github/workspace/terraform/functionapp/modules/app/examples/modules/app does not exist or cannot be read.

2023-08-25T13:24:25.220Z	[33mwarn[0m	commons/load-dir.go:170	failed to build unified config. errors:
/github/workspace/terraform/optional-testing/modules/storage/main.tf:32,1-17: Optional object type attributes are experimental; This feature is currently an opt-in experiment, subject to change in future releases based on feedback.

Activate the feature for this module by adding module_variable_optional_attrs to the list of active experiments.

2023-08-25T13:24:25.221Z	[33mwarn[0m	commons/load-dir.go:170	failed to build unified config. errors:
/github/workspace/terraform/optional-testing/modules/storage/main.tf:32,1-17: Optional object type attributes are experimental; This feature is currently an opt-in experiment, subject to change in future releases based on feedback.

Activate the feature for this module by adding module_variable_optional_attrs to the list of active experiments.



Scan Errors -

	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/functionapp/modules/app/examples
	Error Message       :	diagnostic errors while loading terraform config dir '/github/workspace/terraform/functionapp/modules/app/examples'. error from terraform:
/github/workspace/terraform/functionapp/modules/app/examples/full.tf:1,1-21: Duplicate module call; A module call named "functionapp" was already defined at /github/workspace/terraform/functionapp/modules/app/examples/byo-workspace.tf:1,1-21. Module calls must have unique names within a module.
/github/workspace/terraform/functionapp/modules/app/examples/simple.tf:1,1-21: Duplicate module call; A module call named "functionapp" was already defined at /github/workspace/terraform/functionapp/modules/app/examples/full.tf:1,1-21. Module calls must have unique names within a module.

	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/moved-block
	Error Message       :	diagnostic errors while loading terraform config dir '/github/workspace/terraform/moved-block'. error from terraform:
/github/workspace/terraform/moved-block/main.tf:34,1-6: Unsupported block type; Blocks of type "moved" are not expected here.

	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/optional-testing/modules/storage
	Error Message       :	diagnostic errors while loading terraform config dir '/github/workspace/terraform/optional-testing/modules/storage'. error from terraform:
/github/workspace/terraform/optional-testing/modules/storage/main.tf:32,1-17: Optional object type attributes are experimental; This feature is currently an opt-in experiment, subject to change in future releases based on feedback.

Activate the feature for this module by adding module_variable_optional_attrs to the list of active experiments.

	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace
	Error Message       :	directory '/github/workspace' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/megalinter-reports
	Error Message       :	directory '/github/workspace/megalinter-reports' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/megalinter-reports/copy-paste
	Error Message       :	directory '/github/workspace/megalinter-reports/copy-paste' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/megalinter-reports/copy-paste/html
	Error Message       :	directory '/github/workspace/megalinter-reports/copy-paste/html' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/megalinter-reports/copy-paste/html/js
	Error Message       :	directory '/github/workspace/megalinter-reports/copy-paste/html/js' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/megalinter-reports/copy-paste/html/styles
	Error Message       :	directory '/github/workspace/megalinter-reports/copy-paste/html/styles' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/megalinter-reports/linters_logs
	Error Message       :	directory '/github/workspace/megalinter-reports/linters_logs' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform
	Error Message       :	directory '/github/workspace/terraform' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/auth-examples
	Error Message       :	directory '/github/workspace/terraform/auth-examples' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/auth-examples/run-local
	Error Message       :	directory '/github/workspace/terraform/auth-examples/run-local' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/auth-examples/run-remote
	Error Message       :	directory '/github/workspace/terraform/auth-examples/run-remote' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/functionapp/modules
	Error Message       :	directory '/github/workspace/terraform/functionapp/modules' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/functionapp/src
	Error Message       :	directory '/github/workspace/terraform/functionapp/src' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/functionapp/src/cleanEmptyResourceGroups
	Error Message       :	directory '/github/workspace/terraform/functionapp/src/cleanEmptyResourceGroups' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/insecure
	Error Message       :	directory '/github/workspace/terraform/insecure' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/optional-testing/modules
	Error Message       :	directory '/github/workspace/terraform/optional-testing/modules' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/tf-testing
	Error Message       :	directory '/github/workspace/terraform/tf-testing' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/torivar.com
	Error Message       :	directory '/github/workspace/torivar.com' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/torivar.com/resources
	Error Message       :	directory '/github/workspace/torivar.com/resources' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/torivar.com/resources/bicep
	Error Message       :	directory '/github/workspace/torivar.com/resources/bicep' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/torivar.com/resources/customrbacrole
	Error Message       :	directory '/github/workspace/torivar.com/resources/customrbacrole' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/torivar.com/resources/vmtemplate
	Error Message       :	directory '/github/workspace/torivar.com/resources/vmtemplate' has no terraform config files
	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/optional-testing
	Error Message       :	failed to build unified config. errors:
/github/workspace/terraform/optional-testing/modules/storage/main.tf:32,1-17: Optional object type attributes are experimental; This feature is currently an opt-in experiment, subject to change in future releases based on feedback.

Activate the feature for this module by adding module_variable_optional_attrs to the list of active experiments.

	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/moved-block
	Error Message       :	failed to build unified config. errors:
/github/workspace/terraform/optional-testing/modules/storage/main.tf:32,1-17: Optional object type attributes are experimental; This feature is currently an opt-in experiment, subject to change in future releases based on feedback.

Activate the feature for this module by adding module_variable_optional_attrs to the list of active experiments.

	
	-----------------------------------------------------------------------
	
	IaC Type            :	terraform
	Directory           :	/github/workspace/terraform/functionapp/modules/app/examples
	Error Message       :	failed to build unified config. errors:
<nil>: Failed to read module directory; Module directory /github/workspace/terraform/functionapp/modules/app/examples/modules/app does not exist or cannot be read.

	
	-----------------------------------------------------------------------
	


Violation Details -
    
	Description    :	Ensure that Azure Virtual Network subnet is configured with a Network Security Group
	File           :	terraform/agic/network.tf
	Module Name    :	root
	Plan Root      :	terraform/agic
	Line           :	16
	Severity       :	MEDIUM
	Rule Name      :	reme_noSecurityGroupAssociated
	Rule ID        :	AC_AZURE_0356
	Resource Name  :	appgwsubnet
	Resource Type  :	azurerm_subnet
	Category       :	Infrastructure Security
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Virtual Network subnet is configured with a Network Security Group
	File           :	terraform/appgateway/network.tf
	Module Name    :	root
	Plan Root      :	terraform/appgateway
	Line           :	20
	Severity       :	MEDIUM
	Rule Name      :	reme_noSecurityGroupAssociated
	Rule ID        :	AC_AZURE_0356
	Resource Name  :	example
	Resource Type  :	azurerm_subnet
	Category       :	Infrastructure Security
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Virtual Network subnet is configured with a Network Security Group
	File           :	terraform/functionapp/modules/app/network.tf
	Module Name    :	functionapp-dev
	Plan Root      :	terraform/functionapp
	Line           :	9
	Severity       :	MEDIUM
	Rule Name      :	reme_noSecurityGroupAssociated
	Rule ID        :	AC_AZURE_0356
	Resource Name  :	integration-subnet
	Resource Type  :	azurerm_subnet
	Category       :	Infrastructure Security
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Virtual Network subnet is configured with a Network Security Group
	File           :	terraform/functionapp/modules/app/network.tf
	Module Name    :	root
	Plan Root      :	terraform/functionapp/modules/app
	Line           :	9
	Severity       :	MEDIUM
	Rule Name      :	reme_noSecurityGroupAssociated
	Rule ID        :	AC_AZURE_0356
	Resource Name  :	integration-subnet
	Resource Type  :	azurerm_subnet
	Category       :	Infrastructure Security
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Virtual Network subnet is configured with a Network Security Group
	File           :	terraform/agic/network.tf
	Module Name    :	root
	Plan Root      :	terraform/agic
	Line           :	9
	Severity       :	MEDIUM
	Rule Name      :	reme_noSecurityGroupAssociated
	Rule ID        :	AC_AZURE_0356
	Resource Name  :	kubesubnet
	Resource Type  :	azurerm_subnet
	Category       :	Infrastructure Security
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Virtual Network subnet is configured with a Network Security Group
	File           :	terraform/agic/network.tf
	Module Name    :	root
	Plan Root      :	terraform/agic
	Line           :	23
	Severity       :	MEDIUM
	Rule Name      :	reme_noSecurityGroupAssociated
	Rule ID        :	AC_AZURE_0356
	Resource Name  :	mgmtsubnet
	Resource Type  :	azurerm_subnet
	Category       :	Infrastructure Security
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Virtual Network subnet is configured with a Network Security Group
	File           :	terraform/insecure/vm/main.tf
	Module Name    :	root
	Plan Root      :	terraform/insecure/vm
	Line           :	17
	Severity       :	MEDIUM
	Rule Name      :	reme_noSecurityGroupAssociated
	Rule ID        :	AC_AZURE_0356
	Resource Name  :	subnet1
	Resource Type  :	azurerm_subnet
	Category       :	Infrastructure Security
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Virtual Network subnet is configured with a Network Security Group
	File           :	terraform/tf-testing/service-plan/main.tf
	Module Name    :	root
	Plan Root      :	terraform/tf-testing/service-plan
	Line           :	44
	Severity       :	MEDIUM
	Rule Name      :	reme_noSecurityGroupAssociated
	Rule ID        :	AC_AZURE_0356
	Resource Name  :	subnet1
	Resource Type  :	azurerm_subnet
	Category       :	Infrastructure Security
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Virtual Network subnet is configured with a Network Security Group
	File           :	terraform/vnet-testing/main.tf
	Module Name    :	root
	Plan Root      :	terraform/vnet-testing
	Line           :	15
	Severity       :	MEDIUM
	Rule Name      :	reme_noSecurityGroupAssociated
	Rule ID        :	AC_AZURE_0356
	Resource Name  :	subnet1
	Resource Type  :	azurerm_subnet
	Category       :	Infrastructure Security
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Virtual Network subnet is configured with a Network Security Group
	File           :	terraform/vnet-testing/main.tf
	Module Name    :	root
	Plan Root      :	terraform/vnet-testing
	Line           :	26
	Severity       :	MEDIUM
	Rule Name      :	reme_noSecurityGroupAssociated
	Rule ID        :	AC_AZURE_0356
	Resource Name  :	subnet2
	Resource Type  :	azurerm_subnet
	Category       :	Infrastructure Security
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure Azure Application Gateway Web application firewall (WAF) is enabled
	File           :	terraform/agic/appgw.tf
	Module Name    :	root
	Plan Root      :	terraform/agic
	Line           :	19
	Severity       :	MEDIUM
	Rule Name      :	reme_appGatewayWAFEnabled
	Rule ID        :	AC_AZURE_0189
	Resource Name  :	network
	Resource Type  :	azurerm_application_gateway
	Category       :	Infrastructure Security
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure Azure Application Gateway Web application firewall (WAF) is enabled
	File           :	terraform/appgateway/gateway.tf
	Module Name    :	root
	Plan Root      :	terraform/appgateway
	Line           :	14
	Severity       :	MEDIUM
	Rule Name      :	reme_appGatewayWAFEnabled
	Rule ID        :	AC_AZURE_0189
	Resource Name  :	network
	Resource Type  :	azurerm_application_gateway
	Category       :	Infrastructure Security
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/optional-testing/modules/storage/main.tf
	Module Name    :	storage_accounts
	Plan Root      :	terraform/moved-block
	Line           :	27
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	default
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/appgateway/network.tf
	Module Name    :	root
	Plan Root      :	terraform/appgateway
	Line           :	8
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	example
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/optional-testing/main.tf
	Module Name    :	storage_account
	Plan Root      :	terraform/moved-block
	Line           :	16
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	example1
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/optional-testing/main.tf
	Module Name    :	storage_account
	Plan Root      :	terraform/moved-block
	Line           :	21
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	example2
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/functionapp/main.tf
	Module Name    :	root
	Plan Root      :	terraform/functionapp
	Line           :	20
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	identity-rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/agic/main.tf
	Module Name    :	root
	Plan Root      :	terraform/agic
	Line           :	5
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/auth-examples/run-local/azcli/main.tf
	Module Name    :	root
	Plan Root      :	terraform/auth-examples/run-local/azcli
	Line           :	29
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/auth-examples/run-local/envvars/main.tf
	Module Name    :	root
	Plan Root      :	terraform/auth-examples/run-local/envvars
	Line           :	26
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/auth-examples/run-local/plaintext/main.tf
	Module Name    :	root
	Plan Root      :	terraform/auth-examples/run-local/plaintext
	Line           :	48
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/auth-examples/run-remote/azuread/main.tf
	Module Name    :	root
	Plan Root      :	terraform/auth-examples/run-remote/azuread
	Line           :	26
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/auth-examples/run-remote/envvars/main.tf
	Module Name    :	root
	Plan Root      :	terraform/auth-examples/run-remote/envvars
	Line           :	26
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/auth-examples/run-remote/oidc/main.tf
	Module Name    :	root
	Plan Root      :	terraform/auth-examples/run-remote/oidc
	Line           :	29
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/automationaccount/main.tf
	Module Name    :	root
	Plan Root      :	terraform/automationaccount
	Line           :	13
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/eventhub_diagsettings/main.tf
	Module Name    :	root
	Plan Root      :	terraform/eventhub_diagsettings
	Line           :	27
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/functionapp/modules/app/main.tf
	Module Name    :	functionapp-dev
	Plan Root      :	terraform/functionapp
	Line           :	10
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/functionapp/modules/app/main.tf
	Module Name    :	functionapp-test
	Plan Root      :	terraform/functionapp
	Line           :	10
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/functionapp/modules/app/main.tf
	Module Name    :	root
	Plan Root      :	terraform/functionapp/modules/app
	Line           :	10
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/insecure/appservice/main.tf
	Module Name    :	root
	Plan Root      :	terraform/insecure/appservice
	Line           :	5
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/insecure/keyvault/main.tf
	Module Name    :	root
	Plan Root      :	terraform/insecure/keyvault
	Line           :	10
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/insecure/role/main.tf
	Module Name    :	root
	Plan Root      :	terraform/insecure/role
	Line           :	5
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/insecure/vm/main.tf
	Module Name    :	root
	Plan Root      :	terraform/insecure/vm
	Line           :	5
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/logicapp/main.tf
	Module Name    :	root
	Plan Root      :	terraform/logicapp
	Line           :	33
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/moved-block/main.tf
	Module Name    :	root
	Plan Root      :	terraform/moved-block
	Line           :	16
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/tf-testing/service-plan/main.tf
	Module Name    :	root
	Plan Root      :	terraform/tf-testing/service-plan
	Line           :	24
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/vnet-testing/main.tf
	Module Name    :	root
	Plan Root      :	terraform/vnet-testing
	Line           :	1
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/auth-examples/run-remote/advanced/main.tf
	Module Name    :	root
	Plan Root      :	terraform/auth-examples/run-remote/advanced
	Line           :	56
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg-default
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/auth-examples/run-remote/advanced/main.tf
	Module Name    :	root
	Plan Root      :	terraform/auth-examples/run-remote/advanced
	Line           :	49
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg-mgmt
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that Azure Resource Group has resource lock enabled
	File           :	terraform/auth-examples/run-remote/advanced/main.tf
	Module Name    :	root
	Plan Root      :	terraform/auth-examples/run-remote/advanced
	Line           :	42
	Severity       :	LOW
	Rule Name      :	reme_resourceGroupLock
	Rule ID        :	AC_AZURE_0389
	Resource Name  :	rg-network
	Resource Type  :	azurerm_resource_group
	Category       :	Identity and Access Management
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that logging for Azure KeyVault is 'Enabled'
	File           :	terraform/insecure/keyvault/main.tf
	Module Name    :	root
	Plan Root      :	terraform/insecure/keyvault
	Line           :	19
	Severity       :	HIGH
	Rule Name      :	reme_keyVaultAuditLoggingEnabled
	Rule ID        :	AC_AZURE_0169
	Resource Name  :	example
	Resource Type  :	azurerm_key_vault
	Category       :	Logging and Monitoring
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that logging for Azure KeyVault is 'Enabled'
	File           :	terraform/functionapp/modules/app/key_vault.tf
	Module Name    :	functionapp-dev
	Plan Root      :	terraform/functionapp
	Line           :	1
	Severity       :	HIGH
	Rule Name      :	reme_keyVaultAuditLoggingEnabled
	Rule ID        :	AC_AZURE_0169
	Resource Name  :	kv
	Resource Type  :	azurerm_key_vault
	Category       :	Logging and Monitoring
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that logging for Azure KeyVault is 'Enabled'
	File           :	terraform/functionapp/modules/app/key_vault.tf
	Module Name    :	functionapp-test
	Plan Root      :	terraform/functionapp
	Line           :	1
	Severity       :	HIGH
	Rule Name      :	reme_keyVaultAuditLoggingEnabled
	Rule ID        :	AC_AZURE_0169
	Resource Name  :	kv
	Resource Type  :	azurerm_key_vault
	Category       :	Logging and Monitoring
	
	-----------------------------------------------------------------------
	
	Description    :	Ensure that logging for Azure KeyVault is 'Enabled'
	File           :	terraform/functionapp/modules/app/key_vault.tf
	Module Name    :	root
	Plan Root      :	terraform/functionapp/modules/app
	Line           :	1
	Severity       :	HIGH
	Rule Name      :	reme_keyVaultAuditLoggingEnabled
	Rule ID        :	AC_AZURE_0169
	Resource Name  :	kv
	Resource Type  :	azurerm_key_vault
	Category       :	Logging and Monitoring
	
	-----------------------------------------------------------------------
	

Scan Summary -

	File/Folder         :	/github/workspace
	IaC Type            :	terraform
	Scanned At          :	2023-08-25 13:24:27.698198754 +0000 UTC
	Policies Validated  :	54
	Violated Policies   :	44
	Low                 :	28
	Medium              :	12
	High                :	4
	


::endgroup::
[Post] run: [echo "This is MegaLinter POST_COMMAND on own MegaLinter ! :)"] in cwd [/github/workspace]
[Post] result:
This is MegaLinter POST_COMMAND on own MegaLinter ! :)


+----SUMMARY----+---------------------+---------------+-------+-------+--------+--------------+
| Descriptor    | Linter              | Mode          | Files | Fixed | Errors | Elapsed time |
+---------------+---------------------+---------------+-------+-------+--------+--------------+
| ✅ ARM        | arm-ttk             | file          |     1 |       |      0 |        5.08s |
| ⚠️ COPYPASTE  | jscpd               | project       |   n/a |       |      3 |        1.34s |
| ✅ JSON       | eslint-plugin-jsonc | list_of_files |     1 |     0 |      0 |        1.01s |
| ✅ JSON       | jsonlint            | list_of_files |     1 |       |      0 |        0.15s |
| ✅ JSON       | prettier            | list_of_files |     1 |     1 |      0 |        0.38s |
| ✅ JSON       | v8r                 | list_of_files |     1 |       |      0 |        1.81s |
| ⚠️ REPOSITORY | checkov             | project       |   n/a |       |    215 |       38.48s |
| ⚠️ REPOSITORY | devskim             | project       |   n/a |       |      2 |        2.64s |
| ✅ REPOSITORY | dustilock           | project       |   n/a |       |      0 |        0.03s |
| ✅ REPOSITORY | git_diff            | project       |   n/a |       |      0 |        0.01s |
| ✅ REPOSITORY | grype               | project       |   n/a |       |      0 |        9.94s |
| ✅ REPOSITORY | secretlint          | project       |   n/a |       |      0 |        1.42s |
| ✅ REPOSITORY | syft                | project       |   n/a |       |      0 |        0.24s |
| ⚠️ REPOSITORY | trivy               | project       |   n/a |       |      1 |        9.58s |
| ✅ REPOSITORY | trivy-sbom          | project       |   n/a |       |      0 |        1.49s |
| ⚠️ SPELL      | cspell              | list_of_files |     5 |       |     30 |        6.89s |
| ✅ SPELL      | lychee              | list_of_files |     2 |       |      0 |        0.29s |
| ✅ TERRAFORM  | terraform-fmt       | file          |     2 |     0 |      0 |         0.1s |
| ⚠️ TERRAFORM  | terrascan           | project       |   n/a |       |      1 |         7.0s |
| ⚠️ TERRAFORM  | tflint              | project       |   n/a |       |      1 |        0.38s |
| ✅ YAML       | prettier            | list_of_files |     1 |     1 |      0 |        0.45s |
| ✅ YAML       | v8r                 | list_of_files |     1 |       |      0 |        2.99s |
| ✅ YAML       | yamllint            | list_of_files |     1 |       |      0 |        0.39s |
+---------------+---------------------+---------------+-------+-------+--------+--------------+

[Updated Sources Reporter] copied 2 fixed source files in folder /github/workspace/megalinter-reports/updated_sources.
Download it from artifacts then copy-paste it in your local repo to apply linters updates
[GitHub Comment Reporter] Posted summary as comment on torivara/public #PR4
[33m⚠️ Successfully linted all files, but with ignored errors[0m
